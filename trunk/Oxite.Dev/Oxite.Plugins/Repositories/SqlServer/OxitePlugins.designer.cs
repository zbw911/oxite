#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oxite.Modules.Plugins.Repositories.SqlServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Oxite.Database")]
	public partial class OxitePluginsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertoxite_Plugin(oxite_Plugin instance);
    partial void Updateoxite_Plugin(oxite_Plugin instance);
    partial void Deleteoxite_Plugin(oxite_Plugin instance);
    partial void Insertoxite_PluginSequence(oxite_PluginSequence instance);
    partial void Updateoxite_PluginSequence(oxite_PluginSequence instance);
    partial void Deleteoxite_PluginSequence(oxite_PluginSequence instance);
    partial void Insertoxite_Site(oxite_Site instance);
    partial void Updateoxite_Site(oxite_Site instance);
    partial void Deleteoxite_Site(oxite_Site instance);
    partial void Insertoxite_ExtendedProperty(oxite_ExtendedProperty instance);
    partial void Updateoxite_ExtendedProperty(oxite_ExtendedProperty instance);
    partial void Deleteoxite_ExtendedProperty(oxite_ExtendedProperty instance);
    partial void Insertoxite_ExtendedPropertyValue(oxite_ExtendedPropertyValue instance);
    partial void Updateoxite_ExtendedPropertyValue(oxite_ExtendedPropertyValue instance);
    partial void Deleteoxite_ExtendedPropertyValue(oxite_ExtendedPropertyValue instance);
    partial void Insertoxite_ExtendedPropertyScope(oxite_ExtendedPropertyScope instance);
    partial void Updateoxite_ExtendedPropertyScope(oxite_ExtendedPropertyScope instance);
    partial void Deleteoxite_ExtendedPropertyScope(oxite_ExtendedPropertyScope instance);
    #endregion
		
		public OxitePluginsDataContext() : 
				base("Data Source=.\\SQLEXPRESS;Initial Catalog=Oxite.Database;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public OxitePluginsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxitePluginsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxitePluginsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxitePluginsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<oxite_Plugin> oxite_Plugins
		{
			get
			{
				return this.GetTable<oxite_Plugin>();
			}
		}
		
		public System.Data.Linq.Table<oxite_PluginSequence> oxite_PluginSequences
		{
			get
			{
				return this.GetTable<oxite_PluginSequence>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Site> oxite_Sites
		{
			get
			{
				return this.GetTable<oxite_Site>();
			}
		}
		
		public System.Data.Linq.Table<oxite_ExtendedProperty> oxite_ExtendedProperties
		{
			get
			{
				return this.GetTable<oxite_ExtendedProperty>();
			}
		}
		
		public System.Data.Linq.Table<oxite_ExtendedPropertyValue> oxite_ExtendedPropertyValues
		{
			get
			{
				return this.GetTable<oxite_ExtendedPropertyValue>();
			}
		}
		
		public System.Data.Linq.Table<oxite_ExtendedPropertyScope> oxite_ExtendedPropertyScopes
		{
			get
			{
				return this.GetTable<oxite_ExtendedPropertyScope>();
			}
		}
	}
	
	[Table(Name="dbo.oxite_Plugin")]
	public partial class oxite_Plugin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private System.Guid _PluginID;
		
		private string _VirtualPath;
		
		private bool _Enabled;
		
		private EntitySet<oxite_PluginSequence> _oxite_PluginSequences;
		
		private EntityRef<oxite_Site> _oxite_Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnPluginIDChanging(System.Guid value);
    partial void OnPluginIDChanged();
    partial void OnVirtualPathChanging(string value);
    partial void OnVirtualPathChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
		
		public oxite_Plugin()
		{
			this._oxite_PluginSequences = new EntitySet<oxite_PluginSequence>(new Action<oxite_PluginSequence>(this.attach_oxite_PluginSequences), new Action<oxite_PluginSequence>(this.detach_oxite_PluginSequences));
			this._oxite_Site = default(EntityRef<oxite_Site>);
			OnCreated();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._oxite_Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_PluginID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PluginID
		{
			get
			{
				return this._PluginID;
			}
			set
			{
				if ((this._PluginID != value))
				{
					this.OnPluginIDChanging(value);
					this.SendPropertyChanging();
					this._PluginID = value;
					this.SendPropertyChanged("PluginID");
					this.OnPluginIDChanged();
				}
			}
		}
		
		[Column(Storage="_VirtualPath", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string VirtualPath
		{
			get
			{
				return this._VirtualPath;
			}
			set
			{
				if ((this._VirtualPath != value))
				{
					this.OnVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._VirtualPath = value;
					this.SendPropertyChanged("VirtualPath");
					this.OnVirtualPathChanged();
				}
			}
		}
		
		[Column(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[Association(Name="oxite_Plugin_oxite_PluginSequence", Storage="_oxite_PluginSequences", ThisKey="PluginID", OtherKey="PluginID")]
		public EntitySet<oxite_PluginSequence> oxite_PluginSequences
		{
			get
			{
				return this._oxite_PluginSequences;
			}
			set
			{
				this._oxite_PluginSequences.Assign(value);
			}
		}
		
		[Association(Name="oxite_Site_oxite_Plugin", Storage="_oxite_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public oxite_Site oxite_Site
		{
			get
			{
				return this._oxite_Site.Entity;
			}
			set
			{
				oxite_Site previousValue = this._oxite_Site.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Site.Entity = null;
						previousValue.oxite_Plugins.Remove(this);
					}
					this._oxite_Site.Entity = value;
					if ((value != null))
					{
						value.oxite_Plugins.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_PluginSequences(oxite_PluginSequence entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Plugin = this;
		}
		
		private void detach_oxite_PluginSequences(oxite_PluginSequence entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Plugin = null;
		}
	}
	
	[Table(Name="dbo.oxite_PluginSequence")]
	public partial class oxite_PluginSequence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PluginID;
		
		private string _OperationType;
		
		private string _OperationName;
		
		private byte _SequenceNumber;
		
		private EntityRef<oxite_Plugin> _oxite_Plugin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPluginIDChanging(System.Guid value);
    partial void OnPluginIDChanged();
    partial void OnOperationTypeChanging(string value);
    partial void OnOperationTypeChanged();
    partial void OnOperationNameChanging(string value);
    partial void OnOperationNameChanged();
    partial void OnSequenceNumberChanging(byte value);
    partial void OnSequenceNumberChanged();
    #endregion
		
		public oxite_PluginSequence()
		{
			this._oxite_Plugin = default(EntityRef<oxite_Plugin>);
			OnCreated();
		}
		
		[Column(Storage="_PluginID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PluginID
		{
			get
			{
				return this._PluginID;
			}
			set
			{
				if ((this._PluginID != value))
				{
					if (this._oxite_Plugin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPluginIDChanging(value);
					this.SendPropertyChanging();
					this._PluginID = value;
					this.SendPropertyChanged("PluginID");
					this.OnPluginIDChanged();
				}
			}
		}
		
		[Column(Storage="_OperationType", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OperationType
		{
			get
			{
				return this._OperationType;
			}
			set
			{
				if ((this._OperationType != value))
				{
					this.OnOperationTypeChanging(value);
					this.SendPropertyChanging();
					this._OperationType = value;
					this.SendPropertyChanged("OperationType");
					this.OnOperationTypeChanged();
				}
			}
		}
		
		[Column(Storage="_OperationName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OperationName
		{
			get
			{
				return this._OperationName;
			}
			set
			{
				if ((this._OperationName != value))
				{
					this.OnOperationNameChanging(value);
					this.SendPropertyChanging();
					this._OperationName = value;
					this.SendPropertyChanged("OperationName");
					this.OnOperationNameChanged();
				}
			}
		}
		
		[Column(Storage="_SequenceNumber", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("SequenceNumber");
					this.OnSequenceNumberChanged();
				}
			}
		}
		
		[Association(Name="oxite_Plugin_oxite_PluginSequence", Storage="_oxite_Plugin", ThisKey="PluginID", OtherKey="PluginID", IsForeignKey=true)]
		public oxite_Plugin oxite_Plugin
		{
			get
			{
				return this._oxite_Plugin.Entity;
			}
			set
			{
				oxite_Plugin previousValue = this._oxite_Plugin.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Plugin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Plugin.Entity = null;
						previousValue.oxite_PluginSequences.Remove(this);
					}
					this._oxite_Plugin.Entity = value;
					if ((value != null))
					{
						value.oxite_PluginSequences.Add(this);
						this._PluginID = value.PluginID;
					}
					else
					{
						this._PluginID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Plugin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Site")]
	public partial class oxite_Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private string _SiteHost;
		
		private string _SiteName;
		
		private string _SiteDisplayName;
		
		private string _SiteDescription;
		
		private string _LanguageDefault;
		
		private double _TimeZoneOffset;
		
		private string _PageTitleSeparator;
		
		private string _FavIconUrl;
		
		private string _CommentStateDefault;
		
		private bool _IncludeOpenSearch;
		
		private bool _AuthorAutoSubscribe;
		
		private short _PostEditTimeout;
		
		private string _GravatarDefault;
		
		private string _SkinsPath;
		
		private string _SkinsScriptsPath;
		
		private string _SkinsStylesPath;
		
		private string _Skin;
		
		private string _AdminSkin;
		
		private byte _ServiceRetryCountDefault;
		
		private bool _HasMultipleBlogs;
		
		private string _RouteUrlPrefix;
		
		private bool _CommentingDisabled;
		
		private string _PluginsPath;
		
		private EntitySet<oxite_Plugin> _oxite_Plugins;
		
		private EntitySet<oxite_ExtendedPropertyValue> _oxite_ExtendedPropertyValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnSiteHostChanging(string value);
    partial void OnSiteHostChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnSiteDisplayNameChanging(string value);
    partial void OnSiteDisplayNameChanged();
    partial void OnSiteDescriptionChanging(string value);
    partial void OnSiteDescriptionChanged();
    partial void OnLanguageDefaultChanging(string value);
    partial void OnLanguageDefaultChanged();
    partial void OnTimeZoneOffsetChanging(double value);
    partial void OnTimeZoneOffsetChanged();
    partial void OnPageTitleSeparatorChanging(string value);
    partial void OnPageTitleSeparatorChanged();
    partial void OnFavIconUrlChanging(string value);
    partial void OnFavIconUrlChanged();
    partial void OnCommentStateDefaultChanging(string value);
    partial void OnCommentStateDefaultChanged();
    partial void OnIncludeOpenSearchChanging(bool value);
    partial void OnIncludeOpenSearchChanged();
    partial void OnAuthorAutoSubscribeChanging(bool value);
    partial void OnAuthorAutoSubscribeChanged();
    partial void OnPostEditTimeoutChanging(short value);
    partial void OnPostEditTimeoutChanged();
    partial void OnGravatarDefaultChanging(string value);
    partial void OnGravatarDefaultChanged();
    partial void OnSkinsPathChanging(string value);
    partial void OnSkinsPathChanged();
    partial void OnSkinsScriptsPathChanging(string value);
    partial void OnSkinsScriptsPathChanged();
    partial void OnSkinsStylesPathChanging(string value);
    partial void OnSkinsStylesPathChanged();
    partial void OnSkinChanging(string value);
    partial void OnSkinChanged();
    partial void OnAdminSkinChanging(string value);
    partial void OnAdminSkinChanged();
    partial void OnServiceRetryCountDefaultChanging(byte value);
    partial void OnServiceRetryCountDefaultChanged();
    partial void OnHasMultipleBlogsChanging(bool value);
    partial void OnHasMultipleBlogsChanged();
    partial void OnRouteUrlPrefixChanging(string value);
    partial void OnRouteUrlPrefixChanged();
    partial void OnCommentingDisabledChanging(bool value);
    partial void OnCommentingDisabledChanged();
    partial void OnPluginsPathChanging(string value);
    partial void OnPluginsPathChanged();
    #endregion
		
		public oxite_Site()
		{
			this._oxite_Plugins = new EntitySet<oxite_Plugin>(new Action<oxite_Plugin>(this.attach_oxite_Plugins), new Action<oxite_Plugin>(this.detach_oxite_Plugins));
			this._oxite_ExtendedPropertyValues = new EntitySet<oxite_ExtendedPropertyValue>(new Action<oxite_ExtendedPropertyValue>(this.attach_oxite_ExtendedPropertyValues), new Action<oxite_ExtendedPropertyValue>(this.detach_oxite_ExtendedPropertyValues));
			OnCreated();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_SiteHost", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SiteHost
		{
			get
			{
				return this._SiteHost;
			}
			set
			{
				if ((this._SiteHost != value))
				{
					this.OnSiteHostChanging(value);
					this.SendPropertyChanging();
					this._SiteHost = value;
					this.SendPropertyChanged("SiteHost");
					this.OnSiteHostChanged();
				}
			}
		}
		
		[Column(Storage="_SiteName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[Column(Storage="_SiteDisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteDisplayName
		{
			get
			{
				return this._SiteDisplayName;
			}
			set
			{
				if ((this._SiteDisplayName != value))
				{
					this.OnSiteDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._SiteDisplayName = value;
					this.SendPropertyChanged("SiteDisplayName");
					this.OnSiteDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_SiteDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SiteDescription
		{
			get
			{
				return this._SiteDescription;
			}
			set
			{
				if ((this._SiteDescription != value))
				{
					this.OnSiteDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SiteDescription = value;
					this.SendPropertyChanged("SiteDescription");
					this.OnSiteDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageDefault", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string LanguageDefault
		{
			get
			{
				return this._LanguageDefault;
			}
			set
			{
				if ((this._LanguageDefault != value))
				{
					this.OnLanguageDefaultChanging(value);
					this.SendPropertyChanging();
					this._LanguageDefault = value;
					this.SendPropertyChanged("LanguageDefault");
					this.OnLanguageDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_TimeZoneOffset", DbType="Float NOT NULL")]
		public double TimeZoneOffset
		{
			get
			{
				return this._TimeZoneOffset;
			}
			set
			{
				if ((this._TimeZoneOffset != value))
				{
					this.OnTimeZoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneOffset = value;
					this.SendPropertyChanged("TimeZoneOffset");
					this.OnTimeZoneOffsetChanged();
				}
			}
		}
		
		[Column(Storage="_PageTitleSeparator", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PageTitleSeparator
		{
			get
			{
				return this._PageTitleSeparator;
			}
			set
			{
				if ((this._PageTitleSeparator != value))
				{
					this.OnPageTitleSeparatorChanging(value);
					this.SendPropertyChanging();
					this._PageTitleSeparator = value;
					this.SendPropertyChanged("PageTitleSeparator");
					this.OnPageTitleSeparatorChanged();
				}
			}
		}
		
		[Column(Storage="_FavIconUrl", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FavIconUrl
		{
			get
			{
				return this._FavIconUrl;
			}
			set
			{
				if ((this._FavIconUrl != value))
				{
					this.OnFavIconUrlChanging(value);
					this.SendPropertyChanging();
					this._FavIconUrl = value;
					this.SendPropertyChanged("FavIconUrl");
					this.OnFavIconUrlChanged();
				}
			}
		}
		
		[Column(Storage="_CommentStateDefault", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string CommentStateDefault
		{
			get
			{
				return this._CommentStateDefault;
			}
			set
			{
				if ((this._CommentStateDefault != value))
				{
					this.OnCommentStateDefaultChanging(value);
					this.SendPropertyChanging();
					this._CommentStateDefault = value;
					this.SendPropertyChanged("CommentStateDefault");
					this.OnCommentStateDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_IncludeOpenSearch", DbType="Bit NOT NULL")]
		public bool IncludeOpenSearch
		{
			get
			{
				return this._IncludeOpenSearch;
			}
			set
			{
				if ((this._IncludeOpenSearch != value))
				{
					this.OnIncludeOpenSearchChanging(value);
					this.SendPropertyChanging();
					this._IncludeOpenSearch = value;
					this.SendPropertyChanged("IncludeOpenSearch");
					this.OnIncludeOpenSearchChanged();
				}
			}
		}
		
		[Column(Storage="_AuthorAutoSubscribe", DbType="Bit NOT NULL")]
		public bool AuthorAutoSubscribe
		{
			get
			{
				return this._AuthorAutoSubscribe;
			}
			set
			{
				if ((this._AuthorAutoSubscribe != value))
				{
					this.OnAuthorAutoSubscribeChanging(value);
					this.SendPropertyChanging();
					this._AuthorAutoSubscribe = value;
					this.SendPropertyChanged("AuthorAutoSubscribe");
					this.OnAuthorAutoSubscribeChanged();
				}
			}
		}
		
		[Column(Storage="_PostEditTimeout", DbType="SmallInt NOT NULL")]
		public short PostEditTimeout
		{
			get
			{
				return this._PostEditTimeout;
			}
			set
			{
				if ((this._PostEditTimeout != value))
				{
					this.OnPostEditTimeoutChanging(value);
					this.SendPropertyChanging();
					this._PostEditTimeout = value;
					this.SendPropertyChanged("PostEditTimeout");
					this.OnPostEditTimeoutChanged();
				}
			}
		}
		
		[Column(Storage="_GravatarDefault", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GravatarDefault
		{
			get
			{
				return this._GravatarDefault;
			}
			set
			{
				if ((this._GravatarDefault != value))
				{
					this.OnGravatarDefaultChanging(value);
					this.SendPropertyChanging();
					this._GravatarDefault = value;
					this.SendPropertyChanged("GravatarDefault");
					this.OnGravatarDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_SkinsPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinsPath
		{
			get
			{
				return this._SkinsPath;
			}
			set
			{
				if ((this._SkinsPath != value))
				{
					this.OnSkinsPathChanging(value);
					this.SendPropertyChanging();
					this._SkinsPath = value;
					this.SendPropertyChanged("SkinsPath");
					this.OnSkinsPathChanged();
				}
			}
		}
		
		[Column(Storage="_SkinsScriptsPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinsScriptsPath
		{
			get
			{
				return this._SkinsScriptsPath;
			}
			set
			{
				if ((this._SkinsScriptsPath != value))
				{
					this.OnSkinsScriptsPathChanging(value);
					this.SendPropertyChanging();
					this._SkinsScriptsPath = value;
					this.SendPropertyChanged("SkinsScriptsPath");
					this.OnSkinsScriptsPathChanged();
				}
			}
		}
		
		[Column(Storage="_SkinsStylesPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinsStylesPath
		{
			get
			{
				return this._SkinsStylesPath;
			}
			set
			{
				if ((this._SkinsStylesPath != value))
				{
					this.OnSkinsStylesPathChanging(value);
					this.SendPropertyChanging();
					this._SkinsStylesPath = value;
					this.SendPropertyChanged("SkinsStylesPath");
					this.OnSkinsStylesPathChanged();
				}
			}
		}
		
		[Column(Storage="_Skin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Skin
		{
			get
			{
				return this._Skin;
			}
			set
			{
				if ((this._Skin != value))
				{
					this.OnSkinChanging(value);
					this.SendPropertyChanging();
					this._Skin = value;
					this.SendPropertyChanged("Skin");
					this.OnSkinChanged();
				}
			}
		}
		
		[Column(Storage="_AdminSkin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminSkin
		{
			get
			{
				return this._AdminSkin;
			}
			set
			{
				if ((this._AdminSkin != value))
				{
					this.OnAdminSkinChanging(value);
					this.SendPropertyChanging();
					this._AdminSkin = value;
					this.SendPropertyChanged("AdminSkin");
					this.OnAdminSkinChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceRetryCountDefault", DbType="TinyInt NOT NULL")]
		public byte ServiceRetryCountDefault
		{
			get
			{
				return this._ServiceRetryCountDefault;
			}
			set
			{
				if ((this._ServiceRetryCountDefault != value))
				{
					this.OnServiceRetryCountDefaultChanging(value);
					this.SendPropertyChanging();
					this._ServiceRetryCountDefault = value;
					this.SendPropertyChanged("ServiceRetryCountDefault");
					this.OnServiceRetryCountDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_HasMultipleBlogs", DbType="Bit NOT NULL")]
		public bool HasMultipleBlogs
		{
			get
			{
				return this._HasMultipleBlogs;
			}
			set
			{
				if ((this._HasMultipleBlogs != value))
				{
					this.OnHasMultipleBlogsChanging(value);
					this.SendPropertyChanging();
					this._HasMultipleBlogs = value;
					this.SendPropertyChanged("HasMultipleBlogs");
					this.OnHasMultipleBlogsChanged();
				}
			}
		}
		
		[Column(Storage="_RouteUrlPrefix", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RouteUrlPrefix
		{
			get
			{
				return this._RouteUrlPrefix;
			}
			set
			{
				if ((this._RouteUrlPrefix != value))
				{
					this.OnRouteUrlPrefixChanging(value);
					this.SendPropertyChanging();
					this._RouteUrlPrefix = value;
					this.SendPropertyChanged("RouteUrlPrefix");
					this.OnRouteUrlPrefixChanged();
				}
			}
		}
		
		[Column(Storage="_CommentingDisabled", DbType="Bit NOT NULL")]
		public bool CommentingDisabled
		{
			get
			{
				return this._CommentingDisabled;
			}
			set
			{
				if ((this._CommentingDisabled != value))
				{
					this.OnCommentingDisabledChanging(value);
					this.SendPropertyChanging();
					this._CommentingDisabled = value;
					this.SendPropertyChanged("CommentingDisabled");
					this.OnCommentingDisabledChanged();
				}
			}
		}
		
		[Column(Storage="_PluginsPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PluginsPath
		{
			get
			{
				return this._PluginsPath;
			}
			set
			{
				if ((this._PluginsPath != value))
				{
					this.OnPluginsPathChanging(value);
					this.SendPropertyChanging();
					this._PluginsPath = value;
					this.SendPropertyChanged("PluginsPath");
					this.OnPluginsPathChanged();
				}
			}
		}
		
		[Association(Name="oxite_Site_oxite_Plugin", Storage="_oxite_Plugins", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<oxite_Plugin> oxite_Plugins
		{
			get
			{
				return this._oxite_Plugins;
			}
			set
			{
				this._oxite_Plugins.Assign(value);
			}
		}
		
		[Association(Name="oxite_Site_oxite_ExtendedPropertyValue", Storage="_oxite_ExtendedPropertyValues", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<oxite_ExtendedPropertyValue> oxite_ExtendedPropertyValues
		{
			get
			{
				return this._oxite_ExtendedPropertyValues;
			}
			set
			{
				this._oxite_ExtendedPropertyValues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Plugins(oxite_Plugin entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = this;
		}
		
		private void detach_oxite_Plugins(oxite_Plugin entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = null;
		}
		
		private void attach_oxite_ExtendedPropertyValues(oxite_ExtendedPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = this;
		}
		
		private void detach_oxite_ExtendedPropertyValues(oxite_ExtendedPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = null;
		}
	}
	
	[Table(Name="dbo.oxite_ExtendedProperty")]
	public partial class oxite_ExtendedProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExtendedPropertyID;
		
		private string _ExtendedPropertyName;
		
		private EntitySet<oxite_ExtendedPropertyValue> _oxite_ExtendedPropertyValues;
		
		private EntitySet<oxite_ExtendedPropertyScope> _oxite_ExtendedPropertyScopes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtendedPropertyIDChanging(System.Guid value);
    partial void OnExtendedPropertyIDChanged();
    partial void OnExtendedPropertyNameChanging(string value);
    partial void OnExtendedPropertyNameChanged();
    #endregion
		
		public oxite_ExtendedProperty()
		{
			this._oxite_ExtendedPropertyValues = new EntitySet<oxite_ExtendedPropertyValue>(new Action<oxite_ExtendedPropertyValue>(this.attach_oxite_ExtendedPropertyValues), new Action<oxite_ExtendedPropertyValue>(this.detach_oxite_ExtendedPropertyValues));
			this._oxite_ExtendedPropertyScopes = new EntitySet<oxite_ExtendedPropertyScope>(new Action<oxite_ExtendedPropertyScope>(this.attach_oxite_ExtendedPropertyScopes), new Action<oxite_ExtendedPropertyScope>(this.detach_oxite_ExtendedPropertyScopes));
			OnCreated();
		}
		
		[Column(Storage="_ExtendedPropertyID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExtendedPropertyID
		{
			get
			{
				return this._ExtendedPropertyID;
			}
			set
			{
				if ((this._ExtendedPropertyID != value))
				{
					this.OnExtendedPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyID = value;
					this.SendPropertyChanged("ExtendedPropertyID");
					this.OnExtendedPropertyIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ExtendedPropertyName
		{
			get
			{
				return this._ExtendedPropertyName;
			}
			set
			{
				if ((this._ExtendedPropertyName != value))
				{
					this.OnExtendedPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyName = value;
					this.SendPropertyChanged("ExtendedPropertyName");
					this.OnExtendedPropertyNameChanged();
				}
			}
		}
		
		[Association(Name="oxite_ExtendedProperty_oxite_ExtendedPropertyValue", Storage="_oxite_ExtendedPropertyValues", ThisKey="ExtendedPropertyID", OtherKey="ExtendedPropertyID")]
		public EntitySet<oxite_ExtendedPropertyValue> oxite_ExtendedPropertyValues
		{
			get
			{
				return this._oxite_ExtendedPropertyValues;
			}
			set
			{
				this._oxite_ExtendedPropertyValues.Assign(value);
			}
		}
		
		[Association(Name="oxite_ExtendedProperty_oxite_ExtendedPropertyScope", Storage="_oxite_ExtendedPropertyScopes", ThisKey="ExtendedPropertyID", OtherKey="ExtendedPropertyID")]
		public EntitySet<oxite_ExtendedPropertyScope> oxite_ExtendedPropertyScopes
		{
			get
			{
				return this._oxite_ExtendedPropertyScopes;
			}
			set
			{
				this._oxite_ExtendedPropertyScopes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_ExtendedPropertyValues(oxite_ExtendedPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.oxite_ExtendedProperty = this;
		}
		
		private void detach_oxite_ExtendedPropertyValues(oxite_ExtendedPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.oxite_ExtendedProperty = null;
		}
		
		private void attach_oxite_ExtendedPropertyScopes(oxite_ExtendedPropertyScope entity)
		{
			this.SendPropertyChanging();
			entity.oxite_ExtendedProperty = this;
		}
		
		private void detach_oxite_ExtendedPropertyScopes(oxite_ExtendedPropertyScope entity)
		{
			this.SendPropertyChanging();
			entity.oxite_ExtendedProperty = null;
		}
	}
	
	[Table(Name="dbo.oxite_ExtendedPropertyValue")]
	public partial class oxite_ExtendedPropertyValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private System.Guid _ExtendedPropertyID;
		
		private string _ExtendedPropertyType;
		
		private System.Xml.Linq.XElement _ExtendedPropertyValue;
		
		private EntityRef<oxite_ExtendedProperty> _oxite_ExtendedProperty;
		
		private EntityRef<oxite_Site> _oxite_Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnExtendedPropertyIDChanging(System.Guid value);
    partial void OnExtendedPropertyIDChanged();
    partial void OnExtendedPropertyTypeChanging(string value);
    partial void OnExtendedPropertyTypeChanged();
    partial void OnExtendedPropertyValueChanging(System.Xml.Linq.XElement value);
    partial void OnExtendedPropertyValueChanged();
    #endregion
		
		public oxite_ExtendedPropertyValue()
		{
			this._oxite_ExtendedProperty = default(EntityRef<oxite_ExtendedProperty>);
			this._oxite_Site = default(EntityRef<oxite_Site>);
			OnCreated();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._oxite_Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExtendedPropertyID
		{
			get
			{
				return this._ExtendedPropertyID;
			}
			set
			{
				if ((this._ExtendedPropertyID != value))
				{
					if (this._oxite_ExtendedProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtendedPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyID = value;
					this.SendPropertyChanged("ExtendedPropertyID");
					this.OnExtendedPropertyIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyType", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ExtendedPropertyType
		{
			get
			{
				return this._ExtendedPropertyType;
			}
			set
			{
				if ((this._ExtendedPropertyType != value))
				{
					this.OnExtendedPropertyTypeChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyType = value;
					this.SendPropertyChanged("ExtendedPropertyType");
					this.OnExtendedPropertyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyValue", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ExtendedPropertyValue
		{
			get
			{
				return this._ExtendedPropertyValue;
			}
			set
			{
				if ((this._ExtendedPropertyValue != value))
				{
					this.OnExtendedPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyValue = value;
					this.SendPropertyChanged("ExtendedPropertyValue");
					this.OnExtendedPropertyValueChanged();
				}
			}
		}
		
		[Association(Name="oxite_ExtendedProperty_oxite_ExtendedPropertyValue", Storage="_oxite_ExtendedProperty", ThisKey="ExtendedPropertyID", OtherKey="ExtendedPropertyID", IsForeignKey=true)]
		public oxite_ExtendedProperty oxite_ExtendedProperty
		{
			get
			{
				return this._oxite_ExtendedProperty.Entity;
			}
			set
			{
				oxite_ExtendedProperty previousValue = this._oxite_ExtendedProperty.Entity;
				if (((previousValue != value) 
							|| (this._oxite_ExtendedProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_ExtendedProperty.Entity = null;
						previousValue.oxite_ExtendedPropertyValues.Remove(this);
					}
					this._oxite_ExtendedProperty.Entity = value;
					if ((value != null))
					{
						value.oxite_ExtendedPropertyValues.Add(this);
						this._ExtendedPropertyID = value.ExtendedPropertyID;
					}
					else
					{
						this._ExtendedPropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_ExtendedProperty");
				}
			}
		}
		
		[Association(Name="oxite_Site_oxite_ExtendedPropertyValue", Storage="_oxite_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public oxite_Site oxite_Site
		{
			get
			{
				return this._oxite_Site.Entity;
			}
			set
			{
				oxite_Site previousValue = this._oxite_Site.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Site.Entity = null;
						previousValue.oxite_ExtendedPropertyValues.Remove(this);
					}
					this._oxite_Site.Entity = value;
					if ((value != null))
					{
						value.oxite_ExtendedPropertyValues.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_ExtendedPropertyScope")]
	public partial class oxite_ExtendedPropertyScope : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExtendedPropertyID;
		
		private string _ExtendedPropertyScopeType;
		
		private string _ExtendedPropertyScopeKey;
		
		private EntityRef<oxite_ExtendedProperty> _oxite_ExtendedProperty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtendedPropertyIDChanging(System.Guid value);
    partial void OnExtendedPropertyIDChanged();
    partial void OnExtendedPropertyScopeTypeChanging(string value);
    partial void OnExtendedPropertyScopeTypeChanged();
    partial void OnExtendedPropertyScopeKeyChanging(string value);
    partial void OnExtendedPropertyScopeKeyChanged();
    #endregion
		
		public oxite_ExtendedPropertyScope()
		{
			this._oxite_ExtendedProperty = default(EntityRef<oxite_ExtendedProperty>);
			OnCreated();
		}
		
		[Column(Storage="_ExtendedPropertyID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExtendedPropertyID
		{
			get
			{
				return this._ExtendedPropertyID;
			}
			set
			{
				if ((this._ExtendedPropertyID != value))
				{
					if (this._oxite_ExtendedProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtendedPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyID = value;
					this.SendPropertyChanged("ExtendedPropertyID");
					this.OnExtendedPropertyIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyScopeType", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ExtendedPropertyScopeType
		{
			get
			{
				return this._ExtendedPropertyScopeType;
			}
			set
			{
				if ((this._ExtendedPropertyScopeType != value))
				{
					this.OnExtendedPropertyScopeTypeChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyScopeType = value;
					this.SendPropertyChanged("ExtendedPropertyScopeType");
					this.OnExtendedPropertyScopeTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyScopeKey", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ExtendedPropertyScopeKey
		{
			get
			{
				return this._ExtendedPropertyScopeKey;
			}
			set
			{
				if ((this._ExtendedPropertyScopeKey != value))
				{
					this.OnExtendedPropertyScopeKeyChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyScopeKey = value;
					this.SendPropertyChanged("ExtendedPropertyScopeKey");
					this.OnExtendedPropertyScopeKeyChanged();
				}
			}
		}
		
		[Association(Name="oxite_ExtendedProperty_oxite_ExtendedPropertyScope", Storage="_oxite_ExtendedProperty", ThisKey="ExtendedPropertyID", OtherKey="ExtendedPropertyID", IsForeignKey=true)]
		public oxite_ExtendedProperty oxite_ExtendedProperty
		{
			get
			{
				return this._oxite_ExtendedProperty.Entity;
			}
			set
			{
				oxite_ExtendedProperty previousValue = this._oxite_ExtendedProperty.Entity;
				if (((previousValue != value) 
							|| (this._oxite_ExtendedProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_ExtendedProperty.Entity = null;
						previousValue.oxite_ExtendedPropertyScopes.Remove(this);
					}
					this._oxite_ExtendedProperty.Entity = value;
					if ((value != null))
					{
						value.oxite_ExtendedPropertyScopes.Add(this);
						this._ExtendedPropertyID = value.ExtendedPropertyID;
					}
					else
					{
						this._ExtendedPropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_ExtendedProperty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
