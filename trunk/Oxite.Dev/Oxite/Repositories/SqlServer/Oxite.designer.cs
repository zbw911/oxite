#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oxite.Repositories.SqlServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Oxite.Database")]
	public partial class OxiteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertoxite_Module(oxite_Module instance);
    partial void Updateoxite_Module(oxite_Module instance);
    partial void Deleteoxite_Module(oxite_Module instance);
    partial void Insertoxite_Site(oxite_Site instance);
    partial void Updateoxite_Site(oxite_Site instance);
    partial void Deleteoxite_Site(oxite_Site instance);
    partial void Insertoxite_SiteRedirect(oxite_SiteRedirect instance);
    partial void Updateoxite_SiteRedirect(oxite_SiteRedirect instance);
    partial void Deleteoxite_SiteRedirect(oxite_SiteRedirect instance);
    partial void Insertoxite_StringResource(oxite_StringResource instance);
    partial void Updateoxite_StringResource(oxite_StringResource instance);
    partial void Deleteoxite_StringResource(oxite_StringResource instance);
    partial void Insertoxite_MessageOutbound(oxite_MessageOutbound instance);
    partial void Updateoxite_MessageOutbound(oxite_MessageOutbound instance);
    partial void Deleteoxite_MessageOutbound(oxite_MessageOutbound instance);
    partial void Insertoxite_Language(oxite_Language instance);
    partial void Updateoxite_Language(oxite_Language instance);
    partial void Deleteoxite_Language(oxite_Language instance);
    partial void Insertoxite_ExtendedProperty(oxite_ExtendedProperty instance);
    partial void Updateoxite_ExtendedProperty(oxite_ExtendedProperty instance);
    partial void Deleteoxite_ExtendedProperty(oxite_ExtendedProperty instance);
    partial void Insertoxite_ExtendedPropertyValue(oxite_ExtendedPropertyValue instance);
    partial void Updateoxite_ExtendedPropertyValue(oxite_ExtendedPropertyValue instance);
    partial void Deleteoxite_ExtendedPropertyValue(oxite_ExtendedPropertyValue instance);
    partial void Insertoxite_ExtendedPropertyScope(oxite_ExtendedPropertyScope instance);
    partial void Updateoxite_ExtendedPropertyScope(oxite_ExtendedPropertyScope instance);
    partial void Deleteoxite_ExtendedPropertyScope(oxite_ExtendedPropertyScope instance);
    #endregion
		
		public OxiteDataContext() : 
				base("Data Source=.\\SQLEXPRESS;Initial Catalog=Oxite.Database;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<oxite_Module> oxite_Modules
		{
			get
			{
				return this.GetTable<oxite_Module>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Site> oxite_Sites
		{
			get
			{
				return this.GetTable<oxite_Site>();
			}
		}
		
		public System.Data.Linq.Table<oxite_SiteRedirect> oxite_SiteRedirects
		{
			get
			{
				return this.GetTable<oxite_SiteRedirect>();
			}
		}
		
		public System.Data.Linq.Table<oxite_StringResource> oxite_StringResources
		{
			get
			{
				return this.GetTable<oxite_StringResource>();
			}
		}
		
		public System.Data.Linq.Table<oxite_MessageOutbound> oxite_MessageOutbounds
		{
			get
			{
				return this.GetTable<oxite_MessageOutbound>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Language> oxite_Languages
		{
			get
			{
				return this.GetTable<oxite_Language>();
			}
		}
		
		public System.Data.Linq.Table<oxite_ExtendedProperty> oxite_ExtendedProperties
		{
			get
			{
				return this.GetTable<oxite_ExtendedProperty>();
			}
		}
		
		public System.Data.Linq.Table<oxite_ExtendedPropertyValue> oxite_ExtendedPropertyValues
		{
			get
			{
				return this.GetTable<oxite_ExtendedPropertyValue>();
			}
		}
		
		public System.Data.Linq.Table<oxite_ExtendedPropertyScope> oxite_ExtendedPropertyScopes
		{
			get
			{
				return this.GetTable<oxite_ExtendedPropertyScope>();
			}
		}
	}
	
	[Table(Name="dbo.oxite_Module")]
	public partial class oxite_Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private string _ModuleName;
		
		private byte _ModuleOrder;
		
		private string _ModuleType;
		
		private bool _Enabled;
		
		private bool _IsSystem;
		
		private EntityRef<oxite_Site> _oxite_Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    partial void OnModuleOrderChanging(byte value);
    partial void OnModuleOrderChanged();
    partial void OnModuleTypeChanging(string value);
    partial void OnModuleTypeChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    #endregion
		
		public oxite_Module()
		{
			this._oxite_Site = default(EntityRef<oxite_Site>);
			OnCreated();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._oxite_Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_ModuleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[Column(Storage="_ModuleOrder", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ModuleOrder
		{
			get
			{
				return this._ModuleOrder;
			}
			set
			{
				if ((this._ModuleOrder != value))
				{
					this.OnModuleOrderChanging(value);
					this.SendPropertyChanging();
					this._ModuleOrder = value;
					this.SendPropertyChanged("ModuleOrder");
					this.OnModuleOrderChanged();
				}
			}
		}
		
		[Column(Storage="_ModuleType", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ModuleType
		{
			get
			{
				return this._ModuleType;
			}
			set
			{
				if ((this._ModuleType != value))
				{
					this.OnModuleTypeChanging(value);
					this.SendPropertyChanging();
					this._ModuleType = value;
					this.SendPropertyChanged("ModuleType");
					this.OnModuleTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[Association(Name="oxite_Site_oxite_Module", Storage="_oxite_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public oxite_Site oxite_Site
		{
			get
			{
				return this._oxite_Site.Entity;
			}
			set
			{
				oxite_Site previousValue = this._oxite_Site.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Site.Entity = null;
						previousValue.oxite_Modules.Remove(this);
					}
					this._oxite_Site.Entity = value;
					if ((value != null))
					{
						value.oxite_Modules.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Site")]
	public partial class oxite_Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private string _SiteHost;
		
		private string _SiteName;
		
		private string _SiteDisplayName;
		
		private string _SiteDescription;
		
		private string _LanguageDefault;
		
		private double _TimeZoneOffset;
		
		private string _PageTitleSeparator;
		
		private string _FavIconUrl;
		
		private string _CommentStateDefault;
		
		private bool _IncludeOpenSearch;
		
		private bool _AuthorAutoSubscribe;
		
		private short _PostEditTimeout;
		
		private string _GravatarDefault;
		
		private string _SkinsPath;
		
		private string _SkinsScriptsPath;
		
		private string _SkinsStylesPath;
		
		private string _Skin;
		
		private string _AdminSkin;
		
		private byte _ServiceRetryCountDefault;
		
		private bool _HasMultipleBlogs;
		
		private string _RouteUrlPrefix;
		
		private bool _CommentingDisabled;
		
		private string _PluginsPath;
		
		private EntitySet<oxite_Module> _oxite_Modules;
		
		private EntitySet<oxite_SiteRedirect> _oxite_SiteRedirects;
		
		private EntitySet<oxite_ExtendedPropertyValue> _oxite_ExtendedPropertyValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnSiteHostChanging(string value);
    partial void OnSiteHostChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnSiteDisplayNameChanging(string value);
    partial void OnSiteDisplayNameChanged();
    partial void OnSiteDescriptionChanging(string value);
    partial void OnSiteDescriptionChanged();
    partial void OnLanguageDefaultChanging(string value);
    partial void OnLanguageDefaultChanged();
    partial void OnTimeZoneOffsetChanging(double value);
    partial void OnTimeZoneOffsetChanged();
    partial void OnPageTitleSeparatorChanging(string value);
    partial void OnPageTitleSeparatorChanged();
    partial void OnFavIconUrlChanging(string value);
    partial void OnFavIconUrlChanged();
    partial void OnCommentStateDefaultChanging(string value);
    partial void OnCommentStateDefaultChanged();
    partial void OnIncludeOpenSearchChanging(bool value);
    partial void OnIncludeOpenSearchChanged();
    partial void OnAuthorAutoSubscribeChanging(bool value);
    partial void OnAuthorAutoSubscribeChanged();
    partial void OnPostEditTimeoutChanging(short value);
    partial void OnPostEditTimeoutChanged();
    partial void OnGravatarDefaultChanging(string value);
    partial void OnGravatarDefaultChanged();
    partial void OnSkinsPathChanging(string value);
    partial void OnSkinsPathChanged();
    partial void OnSkinsScriptsPathChanging(string value);
    partial void OnSkinsScriptsPathChanged();
    partial void OnSkinsStylesPathChanging(string value);
    partial void OnSkinsStylesPathChanged();
    partial void OnSkinChanging(string value);
    partial void OnSkinChanged();
    partial void OnAdminSkinChanging(string value);
    partial void OnAdminSkinChanged();
    partial void OnServiceRetryCountDefaultChanging(byte value);
    partial void OnServiceRetryCountDefaultChanged();
    partial void OnHasMultipleBlogsChanging(bool value);
    partial void OnHasMultipleBlogsChanged();
    partial void OnRouteUrlPrefixChanging(string value);
    partial void OnRouteUrlPrefixChanged();
    partial void OnCommentingDisabledChanging(bool value);
    partial void OnCommentingDisabledChanged();
    partial void OnPluginsPathChanging(string value);
    partial void OnPluginsPathChanged();
    #endregion
		
		public oxite_Site()
		{
			this._oxite_Modules = new EntitySet<oxite_Module>(new Action<oxite_Module>(this.attach_oxite_Modules), new Action<oxite_Module>(this.detach_oxite_Modules));
			this._oxite_SiteRedirects = new EntitySet<oxite_SiteRedirect>(new Action<oxite_SiteRedirect>(this.attach_oxite_SiteRedirects), new Action<oxite_SiteRedirect>(this.detach_oxite_SiteRedirects));
			this._oxite_ExtendedPropertyValues = new EntitySet<oxite_ExtendedPropertyValue>(new Action<oxite_ExtendedPropertyValue>(this.attach_oxite_ExtendedPropertyValues), new Action<oxite_ExtendedPropertyValue>(this.detach_oxite_ExtendedPropertyValues));
			OnCreated();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_SiteHost", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SiteHost
		{
			get
			{
				return this._SiteHost;
			}
			set
			{
				if ((this._SiteHost != value))
				{
					this.OnSiteHostChanging(value);
					this.SendPropertyChanging();
					this._SiteHost = value;
					this.SendPropertyChanged("SiteHost");
					this.OnSiteHostChanged();
				}
			}
		}
		
		[Column(Storage="_SiteName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[Column(Storage="_SiteDisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteDisplayName
		{
			get
			{
				return this._SiteDisplayName;
			}
			set
			{
				if ((this._SiteDisplayName != value))
				{
					this.OnSiteDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._SiteDisplayName = value;
					this.SendPropertyChanged("SiteDisplayName");
					this.OnSiteDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_SiteDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SiteDescription
		{
			get
			{
				return this._SiteDescription;
			}
			set
			{
				if ((this._SiteDescription != value))
				{
					this.OnSiteDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SiteDescription = value;
					this.SendPropertyChanged("SiteDescription");
					this.OnSiteDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageDefault", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string LanguageDefault
		{
			get
			{
				return this._LanguageDefault;
			}
			set
			{
				if ((this._LanguageDefault != value))
				{
					this.OnLanguageDefaultChanging(value);
					this.SendPropertyChanging();
					this._LanguageDefault = value;
					this.SendPropertyChanged("LanguageDefault");
					this.OnLanguageDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_TimeZoneOffset", DbType="Float NOT NULL")]
		public double TimeZoneOffset
		{
			get
			{
				return this._TimeZoneOffset;
			}
			set
			{
				if ((this._TimeZoneOffset != value))
				{
					this.OnTimeZoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneOffset = value;
					this.SendPropertyChanged("TimeZoneOffset");
					this.OnTimeZoneOffsetChanged();
				}
			}
		}
		
		[Column(Storage="_PageTitleSeparator", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PageTitleSeparator
		{
			get
			{
				return this._PageTitleSeparator;
			}
			set
			{
				if ((this._PageTitleSeparator != value))
				{
					this.OnPageTitleSeparatorChanging(value);
					this.SendPropertyChanging();
					this._PageTitleSeparator = value;
					this.SendPropertyChanged("PageTitleSeparator");
					this.OnPageTitleSeparatorChanged();
				}
			}
		}
		
		[Column(Storage="_FavIconUrl", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FavIconUrl
		{
			get
			{
				return this._FavIconUrl;
			}
			set
			{
				if ((this._FavIconUrl != value))
				{
					this.OnFavIconUrlChanging(value);
					this.SendPropertyChanging();
					this._FavIconUrl = value;
					this.SendPropertyChanged("FavIconUrl");
					this.OnFavIconUrlChanged();
				}
			}
		}
		
		[Column(Storage="_CommentStateDefault", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string CommentStateDefault
		{
			get
			{
				return this._CommentStateDefault;
			}
			set
			{
				if ((this._CommentStateDefault != value))
				{
					this.OnCommentStateDefaultChanging(value);
					this.SendPropertyChanging();
					this._CommentStateDefault = value;
					this.SendPropertyChanged("CommentStateDefault");
					this.OnCommentStateDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_IncludeOpenSearch", DbType="Bit NOT NULL")]
		public bool IncludeOpenSearch
		{
			get
			{
				return this._IncludeOpenSearch;
			}
			set
			{
				if ((this._IncludeOpenSearch != value))
				{
					this.OnIncludeOpenSearchChanging(value);
					this.SendPropertyChanging();
					this._IncludeOpenSearch = value;
					this.SendPropertyChanged("IncludeOpenSearch");
					this.OnIncludeOpenSearchChanged();
				}
			}
		}
		
		[Column(Storage="_AuthorAutoSubscribe", DbType="Bit NOT NULL")]
		public bool AuthorAutoSubscribe
		{
			get
			{
				return this._AuthorAutoSubscribe;
			}
			set
			{
				if ((this._AuthorAutoSubscribe != value))
				{
					this.OnAuthorAutoSubscribeChanging(value);
					this.SendPropertyChanging();
					this._AuthorAutoSubscribe = value;
					this.SendPropertyChanged("AuthorAutoSubscribe");
					this.OnAuthorAutoSubscribeChanged();
				}
			}
		}
		
		[Column(Storage="_PostEditTimeout", DbType="SmallInt NOT NULL")]
		public short PostEditTimeout
		{
			get
			{
				return this._PostEditTimeout;
			}
			set
			{
				if ((this._PostEditTimeout != value))
				{
					this.OnPostEditTimeoutChanging(value);
					this.SendPropertyChanging();
					this._PostEditTimeout = value;
					this.SendPropertyChanged("PostEditTimeout");
					this.OnPostEditTimeoutChanged();
				}
			}
		}
		
		[Column(Storage="_GravatarDefault", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GravatarDefault
		{
			get
			{
				return this._GravatarDefault;
			}
			set
			{
				if ((this._GravatarDefault != value))
				{
					this.OnGravatarDefaultChanging(value);
					this.SendPropertyChanging();
					this._GravatarDefault = value;
					this.SendPropertyChanged("GravatarDefault");
					this.OnGravatarDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_SkinsPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinsPath
		{
			get
			{
				return this._SkinsPath;
			}
			set
			{
				if ((this._SkinsPath != value))
				{
					this.OnSkinsPathChanging(value);
					this.SendPropertyChanging();
					this._SkinsPath = value;
					this.SendPropertyChanged("SkinsPath");
					this.OnSkinsPathChanged();
				}
			}
		}
		
		[Column(Storage="_SkinsScriptsPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinsScriptsPath
		{
			get
			{
				return this._SkinsScriptsPath;
			}
			set
			{
				if ((this._SkinsScriptsPath != value))
				{
					this.OnSkinsScriptsPathChanging(value);
					this.SendPropertyChanging();
					this._SkinsScriptsPath = value;
					this.SendPropertyChanged("SkinsScriptsPath");
					this.OnSkinsScriptsPathChanged();
				}
			}
		}
		
		[Column(Storage="_SkinsStylesPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinsStylesPath
		{
			get
			{
				return this._SkinsStylesPath;
			}
			set
			{
				if ((this._SkinsStylesPath != value))
				{
					this.OnSkinsStylesPathChanging(value);
					this.SendPropertyChanging();
					this._SkinsStylesPath = value;
					this.SendPropertyChanged("SkinsStylesPath");
					this.OnSkinsStylesPathChanged();
				}
			}
		}
		
		[Column(Storage="_Skin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Skin
		{
			get
			{
				return this._Skin;
			}
			set
			{
				if ((this._Skin != value))
				{
					this.OnSkinChanging(value);
					this.SendPropertyChanging();
					this._Skin = value;
					this.SendPropertyChanged("Skin");
					this.OnSkinChanged();
				}
			}
		}
		
		[Column(Storage="_AdminSkin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminSkin
		{
			get
			{
				return this._AdminSkin;
			}
			set
			{
				if ((this._AdminSkin != value))
				{
					this.OnAdminSkinChanging(value);
					this.SendPropertyChanging();
					this._AdminSkin = value;
					this.SendPropertyChanged("AdminSkin");
					this.OnAdminSkinChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceRetryCountDefault", DbType="TinyInt NOT NULL")]
		public byte ServiceRetryCountDefault
		{
			get
			{
				return this._ServiceRetryCountDefault;
			}
			set
			{
				if ((this._ServiceRetryCountDefault != value))
				{
					this.OnServiceRetryCountDefaultChanging(value);
					this.SendPropertyChanging();
					this._ServiceRetryCountDefault = value;
					this.SendPropertyChanged("ServiceRetryCountDefault");
					this.OnServiceRetryCountDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_HasMultipleBlogs", DbType="Bit NOT NULL")]
		public bool HasMultipleBlogs
		{
			get
			{
				return this._HasMultipleBlogs;
			}
			set
			{
				if ((this._HasMultipleBlogs != value))
				{
					this.OnHasMultipleBlogsChanging(value);
					this.SendPropertyChanging();
					this._HasMultipleBlogs = value;
					this.SendPropertyChanged("HasMultipleBlogs");
					this.OnHasMultipleBlogsChanged();
				}
			}
		}
		
		[Column(Storage="_RouteUrlPrefix", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RouteUrlPrefix
		{
			get
			{
				return this._RouteUrlPrefix;
			}
			set
			{
				if ((this._RouteUrlPrefix != value))
				{
					this.OnRouteUrlPrefixChanging(value);
					this.SendPropertyChanging();
					this._RouteUrlPrefix = value;
					this.SendPropertyChanged("RouteUrlPrefix");
					this.OnRouteUrlPrefixChanged();
				}
			}
		}
		
		[Column(Storage="_CommentingDisabled", DbType="Bit NOT NULL")]
		public bool CommentingDisabled
		{
			get
			{
				return this._CommentingDisabled;
			}
			set
			{
				if ((this._CommentingDisabled != value))
				{
					this.OnCommentingDisabledChanging(value);
					this.SendPropertyChanging();
					this._CommentingDisabled = value;
					this.SendPropertyChanged("CommentingDisabled");
					this.OnCommentingDisabledChanged();
				}
			}
		}
		
		[Column(Storage="_PluginsPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PluginsPath
		{
			get
			{
				return this._PluginsPath;
			}
			set
			{
				if ((this._PluginsPath != value))
				{
					this.OnPluginsPathChanging(value);
					this.SendPropertyChanging();
					this._PluginsPath = value;
					this.SendPropertyChanged("PluginsPath");
					this.OnPluginsPathChanged();
				}
			}
		}
		
		[Association(Name="oxite_Site_oxite_Module", Storage="_oxite_Modules", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<oxite_Module> oxite_Modules
		{
			get
			{
				return this._oxite_Modules;
			}
			set
			{
				this._oxite_Modules.Assign(value);
			}
		}
		
		[Association(Name="oxite_Site_oxite_SiteRedirect", Storage="_oxite_SiteRedirects", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<oxite_SiteRedirect> oxite_SiteRedirects
		{
			get
			{
				return this._oxite_SiteRedirects;
			}
			set
			{
				this._oxite_SiteRedirects.Assign(value);
			}
		}
		
		[Association(Name="oxite_Site_oxite_ExtendedPropertyValue", Storage="_oxite_ExtendedPropertyValues", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<oxite_ExtendedPropertyValue> oxite_ExtendedPropertyValues
		{
			get
			{
				return this._oxite_ExtendedPropertyValues;
			}
			set
			{
				this._oxite_ExtendedPropertyValues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Modules(oxite_Module entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = this;
		}
		
		private void detach_oxite_Modules(oxite_Module entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = null;
		}
		
		private void attach_oxite_SiteRedirects(oxite_SiteRedirect entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = this;
		}
		
		private void detach_oxite_SiteRedirects(oxite_SiteRedirect entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = null;
		}
		
		private void attach_oxite_ExtendedPropertyValues(oxite_ExtendedPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = this;
		}
		
		private void detach_oxite_ExtendedPropertyValues(oxite_ExtendedPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = null;
		}
	}
	
	[Table(Name="dbo.oxite_SiteRedirect")]
	public partial class oxite_SiteRedirect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private string _SiteRedirect;
		
		private EntityRef<oxite_Site> _oxite_Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnSiteRedirectChanging(string value);
    partial void OnSiteRedirectChanged();
    #endregion
		
		public oxite_SiteRedirect()
		{
			this._oxite_Site = default(EntityRef<oxite_Site>);
			OnCreated();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._oxite_Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_SiteRedirect", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SiteRedirect
		{
			get
			{
				return this._SiteRedirect;
			}
			set
			{
				if ((this._SiteRedirect != value))
				{
					this.OnSiteRedirectChanging(value);
					this.SendPropertyChanging();
					this._SiteRedirect = value;
					this.SendPropertyChanged("SiteRedirect");
					this.OnSiteRedirectChanged();
				}
			}
		}
		
		[Association(Name="oxite_Site_oxite_SiteRedirect", Storage="_oxite_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public oxite_Site oxite_Site
		{
			get
			{
				return this._oxite_Site.Entity;
			}
			set
			{
				oxite_Site previousValue = this._oxite_Site.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Site.Entity = null;
						previousValue.oxite_SiteRedirects.Remove(this);
					}
					this._oxite_Site.Entity = value;
					if ((value != null))
					{
						value.oxite_SiteRedirects.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_StringResource")]
	public partial class oxite_StringResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StringResourceKey;
		
		private string _Language;
		
		private short _Version;
		
		private string _StringResourceValue;
		
		private System.Guid _CreatorUserID;
		
		private System.DateTime _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStringResourceKeyChanging(string value);
    partial void OnStringResourceKeyChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnVersionChanging(short value);
    partial void OnVersionChanged();
    partial void OnStringResourceValueChanging(string value);
    partial void OnStringResourceValueChanged();
    partial void OnCreatorUserIDChanging(System.Guid value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public oxite_StringResource()
		{
			OnCreated();
		}
		
		[Column(Storage="_StringResourceKey", DbType="NVarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StringResourceKey
		{
			get
			{
				return this._StringResourceKey;
			}
			set
			{
				if ((this._StringResourceKey != value))
				{
					this.OnStringResourceKeyChanging(value);
					this.SendPropertyChanging();
					this._StringResourceKey = value;
					this.SendPropertyChanged("StringResourceKey");
					this.OnStringResourceKeyChanged();
				}
			}
		}
		
		[Column(Storage="_Language", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Version", DbType="SmallInt NOT NULL")]
		public short Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Storage="_StringResourceValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StringResourceValue
		{
			get
			{
				return this._StringResourceValue;
			}
			set
			{
				if ((this._StringResourceValue != value))
				{
					this.OnStringResourceValueChanging(value);
					this.SendPropertyChanging();
					this._StringResourceValue = value;
					this.SendPropertyChanged("StringResourceValue");
					this.OnStringResourceValueChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_MessageOutbound")]
	public partial class oxite_MessageOutbound : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MessageOutboundID;
		
		private string _MessageTo;
		
		private string _MessageSubject;
		
		private string _MessageBody;
		
		private bool _IsSending;
		
		private byte _RemainingRetryCount;
		
		private System.Nullable<System.DateTime> _SentDate;
		
		private System.Nullable<System.DateTime> _LastAttemptDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageOutboundIDChanging(System.Guid value);
    partial void OnMessageOutboundIDChanged();
    partial void OnMessageToChanging(string value);
    partial void OnMessageToChanged();
    partial void OnMessageSubjectChanging(string value);
    partial void OnMessageSubjectChanged();
    partial void OnMessageBodyChanging(string value);
    partial void OnMessageBodyChanged();
    partial void OnIsSendingChanging(bool value);
    partial void OnIsSendingChanged();
    partial void OnRemainingRetryCountChanging(byte value);
    partial void OnRemainingRetryCountChanged();
    partial void OnSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSentDateChanged();
    partial void OnLastAttemptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastAttemptDateChanged();
    #endregion
		
		public oxite_MessageOutbound()
		{
			OnCreated();
		}
		
		[Column(Storage="_MessageOutboundID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MessageOutboundID
		{
			get
			{
				return this._MessageOutboundID;
			}
			set
			{
				if ((this._MessageOutboundID != value))
				{
					this.OnMessageOutboundIDChanging(value);
					this.SendPropertyChanging();
					this._MessageOutboundID = value;
					this.SendPropertyChanged("MessageOutboundID");
					this.OnMessageOutboundIDChanged();
				}
			}
		}
		
		[Column(Storage="_MessageTo", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageTo
		{
			get
			{
				return this._MessageTo;
			}
			set
			{
				if ((this._MessageTo != value))
				{
					this.OnMessageToChanging(value);
					this.SendPropertyChanging();
					this._MessageTo = value;
					this.SendPropertyChanged("MessageTo");
					this.OnMessageToChanged();
				}
			}
		}
		
		[Column(Storage="_MessageSubject", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string MessageSubject
		{
			get
			{
				return this._MessageSubject;
			}
			set
			{
				if ((this._MessageSubject != value))
				{
					this.OnMessageSubjectChanging(value);
					this.SendPropertyChanging();
					this._MessageSubject = value;
					this.SendPropertyChanged("MessageSubject");
					this.OnMessageSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_MessageBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageBody
		{
			get
			{
				return this._MessageBody;
			}
			set
			{
				if ((this._MessageBody != value))
				{
					this.OnMessageBodyChanging(value);
					this.SendPropertyChanging();
					this._MessageBody = value;
					this.SendPropertyChanged("MessageBody");
					this.OnMessageBodyChanged();
				}
			}
		}
		
		[Column(Storage="_IsSending", DbType="Bit NOT NULL")]
		public bool IsSending
		{
			get
			{
				return this._IsSending;
			}
			set
			{
				if ((this._IsSending != value))
				{
					this.OnIsSendingChanging(value);
					this.SendPropertyChanging();
					this._IsSending = value;
					this.SendPropertyChanged("IsSending");
					this.OnIsSendingChanged();
				}
			}
		}
		
		[Column(Storage="_RemainingRetryCount", DbType="TinyInt NOT NULL")]
		public byte RemainingRetryCount
		{
			get
			{
				return this._RemainingRetryCount;
			}
			set
			{
				if ((this._RemainingRetryCount != value))
				{
					this.OnRemainingRetryCountChanging(value);
					this.SendPropertyChanging();
					this._RemainingRetryCount = value;
					this.SendPropertyChanged("RemainingRetryCount");
					this.OnRemainingRetryCountChanged();
				}
			}
		}
		
		[Column(Storage="_SentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastAttemptDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastAttemptDate
		{
			get
			{
				return this._LastAttemptDate;
			}
			set
			{
				if ((this._LastAttemptDate != value))
				{
					this.OnLastAttemptDateChanging(value);
					this.SendPropertyChanging();
					this._LastAttemptDate = value;
					this.SendPropertyChanged("LastAttemptDate");
					this.OnLastAttemptDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Language")]
	public partial class oxite_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LanguageID;
		
		private string _LanguageName;
		
		private string _LanguageDisplayName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(System.Guid value);
    partial void OnLanguageIDChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    partial void OnLanguageDisplayNameChanging(string value);
    partial void OnLanguageDisplayNameChanged();
    #endregion
		
		public oxite_Language()
		{
			OnCreated();
		}
		
		[Column(Storage="_LanguageID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageName", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string LanguageName
		{
			get
			{
				return this._LanguageName;
			}
			set
			{
				if ((this._LanguageName != value))
				{
					this.OnLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageName = value;
					this.SendPropertyChanged("LanguageName");
					this.OnLanguageNameChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageDisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LanguageDisplayName
		{
			get
			{
				return this._LanguageDisplayName;
			}
			set
			{
				if ((this._LanguageDisplayName != value))
				{
					this.OnLanguageDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageDisplayName = value;
					this.SendPropertyChanged("LanguageDisplayName");
					this.OnLanguageDisplayNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_ExtendedProperty")]
	public partial class oxite_ExtendedProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExtendedPropertyID;
		
		private string _ExtendedPropertyName;
		
		private EntitySet<oxite_ExtendedPropertyValue> _oxite_ExtendedPropertyValues;
		
		private EntitySet<oxite_ExtendedPropertyScope> _oxite_ExtendedPropertyScopes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtendedPropertyIDChanging(System.Guid value);
    partial void OnExtendedPropertyIDChanged();
    partial void OnExtendedPropertyNameChanging(string value);
    partial void OnExtendedPropertyNameChanged();
    #endregion
		
		public oxite_ExtendedProperty()
		{
			this._oxite_ExtendedPropertyValues = new EntitySet<oxite_ExtendedPropertyValue>(new Action<oxite_ExtendedPropertyValue>(this.attach_oxite_ExtendedPropertyValues), new Action<oxite_ExtendedPropertyValue>(this.detach_oxite_ExtendedPropertyValues));
			this._oxite_ExtendedPropertyScopes = new EntitySet<oxite_ExtendedPropertyScope>(new Action<oxite_ExtendedPropertyScope>(this.attach_oxite_ExtendedPropertyScopes), new Action<oxite_ExtendedPropertyScope>(this.detach_oxite_ExtendedPropertyScopes));
			OnCreated();
		}
		
		[Column(Storage="_ExtendedPropertyID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExtendedPropertyID
		{
			get
			{
				return this._ExtendedPropertyID;
			}
			set
			{
				if ((this._ExtendedPropertyID != value))
				{
					this.OnExtendedPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyID = value;
					this.SendPropertyChanged("ExtendedPropertyID");
					this.OnExtendedPropertyIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ExtendedPropertyName
		{
			get
			{
				return this._ExtendedPropertyName;
			}
			set
			{
				if ((this._ExtendedPropertyName != value))
				{
					this.OnExtendedPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyName = value;
					this.SendPropertyChanged("ExtendedPropertyName");
					this.OnExtendedPropertyNameChanged();
				}
			}
		}
		
		[Association(Name="oxite_ExtendedProperty_oxite_ExtendedPropertyValue", Storage="_oxite_ExtendedPropertyValues", ThisKey="ExtendedPropertyID", OtherKey="ExtendedPropertyID")]
		public EntitySet<oxite_ExtendedPropertyValue> oxite_ExtendedPropertyValues
		{
			get
			{
				return this._oxite_ExtendedPropertyValues;
			}
			set
			{
				this._oxite_ExtendedPropertyValues.Assign(value);
			}
		}
		
		[Association(Name="oxite_ExtendedProperty_oxite_ExtendedPropertyScope", Storage="_oxite_ExtendedPropertyScopes", ThisKey="ExtendedPropertyID", OtherKey="ExtendedPropertyID")]
		public EntitySet<oxite_ExtendedPropertyScope> oxite_ExtendedPropertyScopes
		{
			get
			{
				return this._oxite_ExtendedPropertyScopes;
			}
			set
			{
				this._oxite_ExtendedPropertyScopes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_ExtendedPropertyValues(oxite_ExtendedPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.oxite_ExtendedProperty = this;
		}
		
		private void detach_oxite_ExtendedPropertyValues(oxite_ExtendedPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.oxite_ExtendedProperty = null;
		}
		
		private void attach_oxite_ExtendedPropertyScopes(oxite_ExtendedPropertyScope entity)
		{
			this.SendPropertyChanging();
			entity.oxite_ExtendedProperty = this;
		}
		
		private void detach_oxite_ExtendedPropertyScopes(oxite_ExtendedPropertyScope entity)
		{
			this.SendPropertyChanging();
			entity.oxite_ExtendedProperty = null;
		}
	}
	
	[Table(Name="dbo.oxite_ExtendedPropertyValue")]
	public partial class oxite_ExtendedPropertyValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private System.Guid _ExtendedPropertyID;
		
		private string _ExtendedPropertyType;
		
		private System.Xml.Linq.XElement _ExtendedPropertyValue;
		
		private EntityRef<oxite_ExtendedProperty> _oxite_ExtendedProperty;
		
		private EntityRef<oxite_Site> _oxite_Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnExtendedPropertyIDChanging(System.Guid value);
    partial void OnExtendedPropertyIDChanged();
    partial void OnExtendedPropertyTypeChanging(string value);
    partial void OnExtendedPropertyTypeChanged();
    partial void OnExtendedPropertyValueChanging(System.Xml.Linq.XElement value);
    partial void OnExtendedPropertyValueChanged();
    #endregion
		
		public oxite_ExtendedPropertyValue()
		{
			this._oxite_ExtendedProperty = default(EntityRef<oxite_ExtendedProperty>);
			this._oxite_Site = default(EntityRef<oxite_Site>);
			OnCreated();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._oxite_Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExtendedPropertyID
		{
			get
			{
				return this._ExtendedPropertyID;
			}
			set
			{
				if ((this._ExtendedPropertyID != value))
				{
					if (this._oxite_ExtendedProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtendedPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyID = value;
					this.SendPropertyChanged("ExtendedPropertyID");
					this.OnExtendedPropertyIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyType", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ExtendedPropertyType
		{
			get
			{
				return this._ExtendedPropertyType;
			}
			set
			{
				if ((this._ExtendedPropertyType != value))
				{
					this.OnExtendedPropertyTypeChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyType = value;
					this.SendPropertyChanged("ExtendedPropertyType");
					this.OnExtendedPropertyTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyValue", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ExtendedPropertyValue
		{
			get
			{
				return this._ExtendedPropertyValue;
			}
			set
			{
				if ((this._ExtendedPropertyValue != value))
				{
					this.OnExtendedPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyValue = value;
					this.SendPropertyChanged("ExtendedPropertyValue");
					this.OnExtendedPropertyValueChanged();
				}
			}
		}
		
		[Association(Name="oxite_ExtendedProperty_oxite_ExtendedPropertyValue", Storage="_oxite_ExtendedProperty", ThisKey="ExtendedPropertyID", OtherKey="ExtendedPropertyID", IsForeignKey=true)]
		public oxite_ExtendedProperty oxite_ExtendedProperty
		{
			get
			{
				return this._oxite_ExtendedProperty.Entity;
			}
			set
			{
				oxite_ExtendedProperty previousValue = this._oxite_ExtendedProperty.Entity;
				if (((previousValue != value) 
							|| (this._oxite_ExtendedProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_ExtendedProperty.Entity = null;
						previousValue.oxite_ExtendedPropertyValues.Remove(this);
					}
					this._oxite_ExtendedProperty.Entity = value;
					if ((value != null))
					{
						value.oxite_ExtendedPropertyValues.Add(this);
						this._ExtendedPropertyID = value.ExtendedPropertyID;
					}
					else
					{
						this._ExtendedPropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_ExtendedProperty");
				}
			}
		}
		
		[Association(Name="oxite_Site_oxite_ExtendedPropertyValue", Storage="_oxite_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public oxite_Site oxite_Site
		{
			get
			{
				return this._oxite_Site.Entity;
			}
			set
			{
				oxite_Site previousValue = this._oxite_Site.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Site.Entity = null;
						previousValue.oxite_ExtendedPropertyValues.Remove(this);
					}
					this._oxite_Site.Entity = value;
					if ((value != null))
					{
						value.oxite_ExtendedPropertyValues.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_ExtendedPropertyScope")]
	public partial class oxite_ExtendedPropertyScope : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExtendedPropertyID;
		
		private string _ExtendedPropertyScopeType;
		
		private string _ExtendedPropertyScopeKey;
		
		private EntityRef<oxite_ExtendedProperty> _oxite_ExtendedProperty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtendedPropertyIDChanging(System.Guid value);
    partial void OnExtendedPropertyIDChanged();
    partial void OnExtendedPropertyScopeTypeChanging(string value);
    partial void OnExtendedPropertyScopeTypeChanged();
    partial void OnExtendedPropertyScopeKeyChanging(string value);
    partial void OnExtendedPropertyScopeKeyChanged();
    #endregion
		
		public oxite_ExtendedPropertyScope()
		{
			this._oxite_ExtendedProperty = default(EntityRef<oxite_ExtendedProperty>);
			OnCreated();
		}
		
		[Column(Storage="_ExtendedPropertyID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ExtendedPropertyID
		{
			get
			{
				return this._ExtendedPropertyID;
			}
			set
			{
				if ((this._ExtendedPropertyID != value))
				{
					if (this._oxite_ExtendedProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtendedPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyID = value;
					this.SendPropertyChanged("ExtendedPropertyID");
					this.OnExtendedPropertyIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyScopeType", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ExtendedPropertyScopeType
		{
			get
			{
				return this._ExtendedPropertyScopeType;
			}
			set
			{
				if ((this._ExtendedPropertyScopeType != value))
				{
					this.OnExtendedPropertyScopeTypeChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyScopeType = value;
					this.SendPropertyChanged("ExtendedPropertyScopeType");
					this.OnExtendedPropertyScopeTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ExtendedPropertyScopeKey", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ExtendedPropertyScopeKey
		{
			get
			{
				return this._ExtendedPropertyScopeKey;
			}
			set
			{
				if ((this._ExtendedPropertyScopeKey != value))
				{
					this.OnExtendedPropertyScopeKeyChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyScopeKey = value;
					this.SendPropertyChanged("ExtendedPropertyScopeKey");
					this.OnExtendedPropertyScopeKeyChanged();
				}
			}
		}
		
		[Association(Name="oxite_ExtendedProperty_oxite_ExtendedPropertyScope", Storage="_oxite_ExtendedProperty", ThisKey="ExtendedPropertyID", OtherKey="ExtendedPropertyID", IsForeignKey=true)]
		public oxite_ExtendedProperty oxite_ExtendedProperty
		{
			get
			{
				return this._oxite_ExtendedProperty.Entity;
			}
			set
			{
				oxite_ExtendedProperty previousValue = this._oxite_ExtendedProperty.Entity;
				if (((previousValue != value) 
							|| (this._oxite_ExtendedProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_ExtendedProperty.Entity = null;
						previousValue.oxite_ExtendedPropertyScopes.Remove(this);
					}
					this._oxite_ExtendedProperty.Entity = value;
					if ((value != null))
					{
						value.oxite_ExtendedPropertyScopes.Add(this);
						this._ExtendedPropertyID = value.ExtendedPropertyID;
					}
					else
					{
						this._ExtendedPropertyID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_ExtendedProperty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
