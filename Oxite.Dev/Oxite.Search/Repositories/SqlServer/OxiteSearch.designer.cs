#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oxite.Modules.Search.Repositories.SqlServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Oxite.Database")]
	public partial class OxiteSearchDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertoxite_Blog(oxite_Blog instance);
    partial void Updateoxite_Blog(oxite_Blog instance);
    partial void Deleteoxite_Blog(oxite_Blog instance);
    partial void Insertoxite_Post(oxite_Post instance);
    partial void Updateoxite_Post(oxite_Post instance);
    partial void Deleteoxite_Post(oxite_Post instance);
    partial void Insertoxite_Comment(oxite_Comment instance);
    partial void Updateoxite_Comment(oxite_Comment instance);
    partial void Deleteoxite_Comment(oxite_Comment instance);
    partial void Insertoxite_Tag(oxite_Tag instance);
    partial void Updateoxite_Tag(oxite_Tag instance);
    partial void Deleteoxite_Tag(oxite_Tag instance);
    partial void Insertoxite_PostTagRelationship(oxite_PostTagRelationship instance);
    partial void Updateoxite_PostTagRelationship(oxite_PostTagRelationship instance);
    partial void Deleteoxite_PostTagRelationship(oxite_PostTagRelationship instance);
    partial void Insertoxite_Site(oxite_Site instance);
    partial void Updateoxite_Site(oxite_Site instance);
    partial void Deleteoxite_Site(oxite_Site instance);
    partial void Insertoxite_User(oxite_User instance);
    partial void Updateoxite_User(oxite_User instance);
    partial void Deleteoxite_User(oxite_User instance);
    partial void Insertoxite_Language(oxite_Language instance);
    partial void Updateoxite_Language(oxite_Language instance);
    partial void Deleteoxite_Language(oxite_Language instance);
    #endregion
		
		public OxiteSearchDataContext() : 
				base("Data Source=.\\SQLEXPRESS;Initial Catalog=Oxite.Database;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public OxiteSearchDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteSearchDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteSearchDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteSearchDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<oxite_Blog> oxite_Blogs
		{
			get
			{
				return this.GetTable<oxite_Blog>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Post> oxite_Posts
		{
			get
			{
				return this.GetTable<oxite_Post>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Comment> oxite_Comments
		{
			get
			{
				return this.GetTable<oxite_Comment>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Tag> oxite_Tags
		{
			get
			{
				return this.GetTable<oxite_Tag>();
			}
		}
		
		public System.Data.Linq.Table<oxite_PostTagRelationship> oxite_PostTagRelationships
		{
			get
			{
				return this.GetTable<oxite_PostTagRelationship>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Site> oxite_Sites
		{
			get
			{
				return this.GetTable<oxite_Site>();
			}
		}
		
		public System.Data.Linq.Table<oxite_User> oxite_Users
		{
			get
			{
				return this.GetTable<oxite_User>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Language> oxite_Languages
		{
			get
			{
				return this.GetTable<oxite_Language>();
			}
		}
	}
	
	[Table(Name="dbo.oxite_Blog")]
	public partial class oxite_Blog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private System.Guid _BlogID;
		
		private string _BlogName;
		
		private string _DisplayName;
		
		private string _Description;
		
		private bool _CommentingDisabled;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<oxite_Post> _oxite_Posts;
		
		private EntityRef<oxite_Site> _oxite_Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnBlogIDChanging(System.Guid value);
    partial void OnBlogIDChanged();
    partial void OnBlogNameChanging(string value);
    partial void OnBlogNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCommentingDisabledChanging(bool value);
    partial void OnCommentingDisabledChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public oxite_Blog()
		{
			this._oxite_Posts = new EntitySet<oxite_Post>(new Action<oxite_Post>(this.attach_oxite_Posts), new Action<oxite_Post>(this.detach_oxite_Posts));
			this._oxite_Site = default(EntityRef<oxite_Site>);
			OnCreated();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._oxite_Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_BlogID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BlogID
		{
			get
			{
				return this._BlogID;
			}
			set
			{
				if ((this._BlogID != value))
				{
					this.OnBlogIDChanging(value);
					this.SendPropertyChanging();
					this._BlogID = value;
					this.SendPropertyChanged("BlogID");
					this.OnBlogIDChanged();
				}
			}
		}
		
		[Column(Storage="_BlogName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string BlogName
		{
			get
			{
				return this._BlogName;
			}
			set
			{
				if ((this._BlogName != value))
				{
					this.OnBlogNameChanging(value);
					this.SendPropertyChanging();
					this._BlogName = value;
					this.SendPropertyChanged("BlogName");
					this.OnBlogNameChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_CommentingDisabled", DbType="Bit NOT NULL")]
		public bool CommentingDisabled
		{
			get
			{
				return this._CommentingDisabled;
			}
			set
			{
				if ((this._CommentingDisabled != value))
				{
					this.OnCommentingDisabledChanging(value);
					this.SendPropertyChanging();
					this._CommentingDisabled = value;
					this.SendPropertyChanged("CommentingDisabled");
					this.OnCommentingDisabledChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Blog_oxite_Post", Storage="_oxite_Posts", ThisKey="BlogID", OtherKey="BlogID")]
		public EntitySet<oxite_Post> oxite_Posts
		{
			get
			{
				return this._oxite_Posts;
			}
			set
			{
				this._oxite_Posts.Assign(value);
			}
		}
		
		[Association(Name="oxite_Site_oxite_Blog", Storage="_oxite_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public oxite_Site oxite_Site
		{
			get
			{
				return this._oxite_Site.Entity;
			}
			set
			{
				oxite_Site previousValue = this._oxite_Site.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Site.Entity = null;
						previousValue.oxite_Blogs.Remove(this);
					}
					this._oxite_Site.Entity = value;
					if ((value != null))
					{
						value.oxite_Blogs.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Posts(oxite_Post entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Blog = this;
		}
		
		private void detach_oxite_Posts(oxite_Post entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Blog = null;
		}
	}
	
	[Table(Name="dbo.oxite_Post")]
	public partial class oxite_Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BlogID;
		
		private System.Guid _PostID;
		
		private System.Guid _CreatorUserID;
		
		private string _Title;
		
		private string _Body;
		
		private string _BodyShort;
		
		private byte _State;
		
		private string _Slug;
		
		private bool _CommentingDisabled;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private System.Nullable<System.DateTime> _PublishedDate;
		
		private string _SearchBody;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntitySet<oxite_PostTagRelationship> _oxite_PostTagRelationships;
		
		private EntityRef<oxite_Blog> _oxite_Blog;
		
		private EntityRef<oxite_User> _oxite_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogIDChanging(System.Guid value);
    partial void OnBlogIDChanged();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnCreatorUserIDChanging(System.Guid value);
    partial void OnCreatorUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnBodyShortChanging(string value);
    partial void OnBodyShortChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnCommentingDisabledChanging(bool value);
    partial void OnCommentingDisabledChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnPublishedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedDateChanged();
    partial void OnSearchBodyChanging(string value);
    partial void OnSearchBodyChanged();
    #endregion
		
		public oxite_Post()
		{
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_PostTagRelationships = new EntitySet<oxite_PostTagRelationship>(new Action<oxite_PostTagRelationship>(this.attach_oxite_PostTagRelationships), new Action<oxite_PostTagRelationship>(this.detach_oxite_PostTagRelationships));
			this._oxite_Blog = default(EntityRef<oxite_Blog>);
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[Column(Storage="_BlogID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BlogID
		{
			get
			{
				return this._BlogID;
			}
			set
			{
				if ((this._BlogID != value))
				{
					if (this._oxite_Blog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlogIDChanging(value);
					this.SendPropertyChanging();
					this._BlogID = value;
					this.SendPropertyChanged("BlogID");
					this.OnBlogIDChanged();
				}
			}
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[Column(Storage="_BodyShort", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BodyShort
		{
			get
			{
				return this._BodyShort;
			}
			set
			{
				if ((this._BodyShort != value))
				{
					this.OnBodyShortChanging(value);
					this.SendPropertyChanging();
					this._BodyShort = value;
					this.SendPropertyChanged("BodyShort");
					this.OnBodyShortChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="TinyInt NOT NULL")]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_Slug", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[Column(Storage="_CommentingDisabled", DbType="Bit NOT NULL")]
		public bool CommentingDisabled
		{
			get
			{
				return this._CommentingDisabled;
			}
			set
			{
				if ((this._CommentingDisabled != value))
				{
					this.OnCommentingDisabledChanging(value);
					this.SendPropertyChanging();
					this._CommentingDisabled = value;
					this.SendPropertyChanged("CommentingDisabled");
					this.OnCommentingDisabledChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PublishedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishedDate
		{
			get
			{
				return this._PublishedDate;
			}
			set
			{
				if ((this._PublishedDate != value))
				{
					this.OnPublishedDateChanging(value);
					this.SendPropertyChanging();
					this._PublishedDate = value;
					this.SendPropertyChanged("PublishedDate");
					this.OnPublishedDateChanged();
				}
			}
		}
		
		[Column(Storage="_SearchBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SearchBody
		{
			get
			{
				return this._SearchBody;
			}
			set
			{
				if ((this._SearchBody != value))
				{
					this.OnSearchBodyChanging(value);
					this.SendPropertyChanging();
					this._SearchBody = value;
					this.SendPropertyChanged("SearchBody");
					this.OnSearchBodyChanged();
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_Comment", Storage="_oxite_Comments", ThisKey="PostID", OtherKey="PostID")]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostTagRelationship", Storage="_oxite_PostTagRelationships", ThisKey="PostID", OtherKey="PostID")]
		public EntitySet<oxite_PostTagRelationship> oxite_PostTagRelationships
		{
			get
			{
				return this._oxite_PostTagRelationships;
			}
			set
			{
				this._oxite_PostTagRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Blog_oxite_Post", Storage="_oxite_Blog", ThisKey="BlogID", OtherKey="BlogID", IsForeignKey=true)]
		public oxite_Blog oxite_Blog
		{
			get
			{
				return this._oxite_Blog.Entity;
			}
			set
			{
				oxite_Blog previousValue = this._oxite_Blog.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Blog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Blog.Entity = null;
						previousValue.oxite_Posts.Remove(this);
					}
					this._oxite_Blog.Entity = value;
					if ((value != null))
					{
						value.oxite_Posts.Add(this);
						this._BlogID = value.BlogID;
					}
					else
					{
						this._BlogID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Blog");
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_Post", Storage="_oxite_User", ThisKey="CreatorUserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_Posts.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_Posts.Add(this);
						this._CreatorUserID = value.UserID;
					}
					else
					{
						this._CreatorUserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = null;
		}
		
		private void attach_oxite_PostTagRelationships(oxite_PostTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = this;
		}
		
		private void detach_oxite_PostTagRelationships(oxite_PostTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Post = null;
		}
	}
	
	[Table(Name="dbo.oxite_Comment")]
	public partial class oxite_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PostID;
		
		private System.Guid _ParentCommentID;
		
		private System.Guid _CommentID;
		
		private System.Guid _CreatorUserID;
		
		private string _CreatorName;
		
		private string _CreatorEmail;
		
		private string _CreatorHashedEmail;
		
		private string _CreatorUrl;
		
		private System.Guid _LanguageID;
		
		private long _CreatorIP;
		
		private string _UserAgent;
		
		private string _Body;
		
		private byte _State;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private string _Slug;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntityRef<oxite_Comment> _oxite_Comment1;
		
		private EntityRef<oxite_Post> _oxite_Post;
		
		private EntityRef<oxite_User> _oxite_User;
		
		private EntityRef<oxite_Language> _oxite_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnParentCommentIDChanging(System.Guid value);
    partial void OnParentCommentIDChanged();
    partial void OnCommentIDChanging(System.Guid value);
    partial void OnCommentIDChanged();
    partial void OnCreatorUserIDChanging(System.Guid value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorNameChanging(string value);
    partial void OnCreatorNameChanged();
    partial void OnCreatorEmailChanging(string value);
    partial void OnCreatorEmailChanged();
    partial void OnCreatorHashedEmailChanging(string value);
    partial void OnCreatorHashedEmailChanged();
    partial void OnCreatorUrlChanging(string value);
    partial void OnCreatorUrlChanged();
    partial void OnLanguageIDChanging(System.Guid value);
    partial void OnLanguageIDChanged();
    partial void OnCreatorIPChanging(long value);
    partial void OnCreatorIPChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    #endregion
		
		public oxite_Comment()
		{
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_Comment1 = default(EntityRef<oxite_Comment>);
			this._oxite_Post = default(EntityRef<oxite_Post>);
			this._oxite_User = default(EntityRef<oxite_User>);
			this._oxite_Language = default(EntityRef<oxite_Language>);
			OnCreated();
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._oxite_Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_ParentCommentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentCommentID
		{
			get
			{
				return this._ParentCommentID;
			}
			set
			{
				if ((this._ParentCommentID != value))
				{
					if (this._oxite_Comment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentCommentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentCommentID = value;
					this.SendPropertyChanged("ParentCommentID");
					this.OnParentCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorName", DbType="NVarChar(50)")]
		public string CreatorName
		{
			get
			{
				return this._CreatorName;
			}
			set
			{
				if ((this._CreatorName != value))
				{
					this.OnCreatorNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorName = value;
					this.SendPropertyChanged("CreatorName");
					this.OnCreatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorEmail", DbType="NVarChar(100)")]
		public string CreatorEmail
		{
			get
			{
				return this._CreatorEmail;
			}
			set
			{
				if ((this._CreatorEmail != value))
				{
					this.OnCreatorEmailChanging(value);
					this.SendPropertyChanging();
					this._CreatorEmail = value;
					this.SendPropertyChanged("CreatorEmail");
					this.OnCreatorEmailChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorHashedEmail", DbType="NVarChar(200)")]
		public string CreatorHashedEmail
		{
			get
			{
				return this._CreatorHashedEmail;
			}
			set
			{
				if ((this._CreatorHashedEmail != value))
				{
					this.OnCreatorHashedEmailChanging(value);
					this.SendPropertyChanging();
					this._CreatorHashedEmail = value;
					this.SendPropertyChanged("CreatorHashedEmail");
					this.OnCreatorHashedEmailChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUrl", DbType="NVarChar(300)")]
		public string CreatorUrl
		{
			get
			{
				return this._CreatorUrl;
			}
			set
			{
				if ((this._CreatorUrl != value))
				{
					this.OnCreatorUrlChanging(value);
					this.SendPropertyChanging();
					this._CreatorUrl = value;
					this.SendPropertyChanged("CreatorUrl");
					this.OnCreatorUrlChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._oxite_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorIP", DbType="BigInt NOT NULL")]
		public long CreatorIP
		{
			get
			{
				return this._CreatorIP;
			}
			set
			{
				if ((this._CreatorIP != value))
				{
					this.OnCreatorIPChanging(value);
					this.SendPropertyChanging();
					this._CreatorIP = value;
					this.SendPropertyChanged("CreatorIP");
					this.OnCreatorIPChanged();
				}
			}
		}
		
		[Column(Storage="_UserAgent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="TinyInt NOT NULL")]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Slug", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[Association(Name="oxite_Comment_oxite_Comment", Storage="_oxite_Comments", ThisKey="CommentID", OtherKey="ParentCommentID")]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_Comment_oxite_Comment", Storage="_oxite_Comment1", ThisKey="ParentCommentID", OtherKey="CommentID", IsForeignKey=true)]
		public oxite_Comment oxite_Comment1
		{
			get
			{
				return this._oxite_Comment1.Entity;
			}
			set
			{
				oxite_Comment previousValue = this._oxite_Comment1.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Comment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Comment1.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_Comment1.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._ParentCommentID = value.CommentID;
					}
					else
					{
						this._ParentCommentID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Comment1");
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_Comment", Storage="_oxite_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public oxite_Post oxite_Post
		{
			get
			{
				return this._oxite_Post.Entity;
			}
			set
			{
				oxite_Post previousValue = this._oxite_Post.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Post.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_Post.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Post");
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_Comment", Storage="_oxite_User", ThisKey="CreatorUserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._CreatorUserID = value.UserID;
					}
					else
					{
						this._CreatorUserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		[Association(Name="oxite_Language_oxite_Comment", Storage="_oxite_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public oxite_Language oxite_Language
		{
			get
			{
				return this._oxite_Language.Entity;
			}
			set
			{
				oxite_Language previousValue = this._oxite_Language.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Language.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_Language.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment1 = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment1 = null;
		}
	}
	
	[Table(Name="dbo.oxite_Tag")]
	public partial class oxite_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParentTagID;
		
		private System.Guid _TagID;
		
		private string _TagName;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<oxite_Tag> _oxite_Tags;
		
		private EntitySet<oxite_PostTagRelationship> _oxite_PostTagRelationships;
		
		private EntityRef<oxite_Tag> _oxite_Tag1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentTagIDChanging(System.Guid value);
    partial void OnParentTagIDChanged();
    partial void OnTagIDChanging(System.Guid value);
    partial void OnTagIDChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public oxite_Tag()
		{
			this._oxite_Tags = new EntitySet<oxite_Tag>(new Action<oxite_Tag>(this.attach_oxite_Tags), new Action<oxite_Tag>(this.detach_oxite_Tags));
			this._oxite_PostTagRelationships = new EntitySet<oxite_PostTagRelationship>(new Action<oxite_PostTagRelationship>(this.attach_oxite_PostTagRelationships), new Action<oxite_PostTagRelationship>(this.detach_oxite_PostTagRelationships));
			this._oxite_Tag1 = default(EntityRef<oxite_Tag>);
			OnCreated();
		}
		
		[Column(Storage="_ParentTagID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentTagID
		{
			get
			{
				return this._ParentTagID;
			}
			set
			{
				if ((this._ParentTagID != value))
				{
					if (this._oxite_Tag1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentTagIDChanging(value);
					this.SendPropertyChanging();
					this._ParentTagID = value;
					this.SendPropertyChanged("ParentTagID");
					this.OnParentTagIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this.OnTagNameChanging(value);
					this.SendPropertyChanging();
					this._TagName = value;
					this.SendPropertyChanged("TagName");
					this.OnTagNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Tag_oxite_Tag", Storage="_oxite_Tags", ThisKey="TagID", OtherKey="ParentTagID")]
		public EntitySet<oxite_Tag> oxite_Tags
		{
			get
			{
				return this._oxite_Tags;
			}
			set
			{
				this._oxite_Tags.Assign(value);
			}
		}
		
		[Association(Name="oxite_Tag_oxite_PostTagRelationship", Storage="_oxite_PostTagRelationships", ThisKey="TagID", OtherKey="TagID")]
		public EntitySet<oxite_PostTagRelationship> oxite_PostTagRelationships
		{
			get
			{
				return this._oxite_PostTagRelationships;
			}
			set
			{
				this._oxite_PostTagRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Tag_oxite_Tag", Storage="_oxite_Tag1", ThisKey="ParentTagID", OtherKey="TagID", IsForeignKey=true)]
		public oxite_Tag oxite_Tag1
		{
			get
			{
				return this._oxite_Tag1.Entity;
			}
			set
			{
				oxite_Tag previousValue = this._oxite_Tag1.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Tag1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Tag1.Entity = null;
						previousValue.oxite_Tags.Remove(this);
					}
					this._oxite_Tag1.Entity = value;
					if ((value != null))
					{
						value.oxite_Tags.Add(this);
						this._ParentTagID = value.TagID;
					}
					else
					{
						this._ParentTagID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Tag1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Tags(oxite_Tag entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag1 = this;
		}
		
		private void detach_oxite_Tags(oxite_Tag entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag1 = null;
		}
		
		private void attach_oxite_PostTagRelationships(oxite_PostTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag = this;
		}
		
		private void detach_oxite_PostTagRelationships(oxite_PostTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag = null;
		}
	}
	
	[Table(Name="dbo.oxite_PostTagRelationship")]
	public partial class oxite_PostTagRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PostID;
		
		private System.Guid _TagID;
		
		private string _TagDisplayName;
		
		private EntityRef<oxite_Post> _oxite_Post;
		
		private EntityRef<oxite_Tag> _oxite_Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnTagIDChanging(System.Guid value);
    partial void OnTagIDChanged();
    partial void OnTagDisplayNameChanging(string value);
    partial void OnTagDisplayNameChanged();
    #endregion
		
		public oxite_PostTagRelationship()
		{
			this._oxite_Post = default(EntityRef<oxite_Post>);
			this._oxite_Tag = default(EntityRef<oxite_Tag>);
			OnCreated();
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					if (this._oxite_Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._oxite_Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagDisplayName", DbType="NVarChar(MAX)")]
		public string TagDisplayName
		{
			get
			{
				return this._TagDisplayName;
			}
			set
			{
				if ((this._TagDisplayName != value))
				{
					this.OnTagDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._TagDisplayName = value;
					this.SendPropertyChanged("TagDisplayName");
					this.OnTagDisplayNameChanged();
				}
			}
		}
		
		[Association(Name="oxite_Post_oxite_PostTagRelationship", Storage="_oxite_Post", ThisKey="PostID", OtherKey="PostID", IsForeignKey=true)]
		public oxite_Post oxite_Post
		{
			get
			{
				return this._oxite_Post.Entity;
			}
			set
			{
				oxite_Post previousValue = this._oxite_Post.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Post.Entity = null;
						previousValue.oxite_PostTagRelationships.Remove(this);
					}
					this._oxite_Post.Entity = value;
					if ((value != null))
					{
						value.oxite_PostTagRelationships.Add(this);
						this._PostID = value.PostID;
					}
					else
					{
						this._PostID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Post");
				}
			}
		}
		
		[Association(Name="oxite_Tag_oxite_PostTagRelationship", Storage="_oxite_Tag", ThisKey="TagID", OtherKey="TagID", IsForeignKey=true)]
		public oxite_Tag oxite_Tag
		{
			get
			{
				return this._oxite_Tag.Entity;
			}
			set
			{
				oxite_Tag previousValue = this._oxite_Tag.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Tag.Entity = null;
						previousValue.oxite_PostTagRelationships.Remove(this);
					}
					this._oxite_Tag.Entity = value;
					if ((value != null))
					{
						value.oxite_PostTagRelationships.Add(this);
						this._TagID = value.TagID;
					}
					else
					{
						this._TagID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Site")]
	public partial class oxite_Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private string _SiteHost;
		
		private string _SiteName;
		
		private string _SiteDisplayName;
		
		private string _SiteDescription;
		
		private string _LanguageDefault;
		
		private double _TimeZoneOffset;
		
		private string _PageTitleSeparator;
		
		private string _FavIconUrl;
		
		private string _CommentStateDefault;
		
		private bool _IncludeOpenSearch;
		
		private bool _AuthorAutoSubscribe;
		
		private short _PostEditTimeout;
		
		private string _GravatarDefault;
		
		private string _SkinsPath;
		
		private string _SkinsScriptsPath;
		
		private string _SkinsStylesPath;
		
		private string _Skin;
		
		private string _AdminSkin;
		
		private byte _ServiceRetryCountDefault;
		
		private bool _HasMultipleBlogs;
		
		private string _RouteUrlPrefix;
		
		private bool _CommentingDisabled;
		
		private string _PluginsPath;
		
		private EntitySet<oxite_Blog> _oxite_Blogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnSiteHostChanging(string value);
    partial void OnSiteHostChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnSiteDisplayNameChanging(string value);
    partial void OnSiteDisplayNameChanged();
    partial void OnSiteDescriptionChanging(string value);
    partial void OnSiteDescriptionChanged();
    partial void OnLanguageDefaultChanging(string value);
    partial void OnLanguageDefaultChanged();
    partial void OnTimeZoneOffsetChanging(double value);
    partial void OnTimeZoneOffsetChanged();
    partial void OnPageTitleSeparatorChanging(string value);
    partial void OnPageTitleSeparatorChanged();
    partial void OnFavIconUrlChanging(string value);
    partial void OnFavIconUrlChanged();
    partial void OnCommentStateDefaultChanging(string value);
    partial void OnCommentStateDefaultChanged();
    partial void OnIncludeOpenSearchChanging(bool value);
    partial void OnIncludeOpenSearchChanged();
    partial void OnAuthorAutoSubscribeChanging(bool value);
    partial void OnAuthorAutoSubscribeChanged();
    partial void OnPostEditTimeoutChanging(short value);
    partial void OnPostEditTimeoutChanged();
    partial void OnGravatarDefaultChanging(string value);
    partial void OnGravatarDefaultChanged();
    partial void OnSkinsPathChanging(string value);
    partial void OnSkinsPathChanged();
    partial void OnSkinsScriptsPathChanging(string value);
    partial void OnSkinsScriptsPathChanged();
    partial void OnSkinsStylesPathChanging(string value);
    partial void OnSkinsStylesPathChanged();
    partial void OnSkinChanging(string value);
    partial void OnSkinChanged();
    partial void OnAdminSkinChanging(string value);
    partial void OnAdminSkinChanged();
    partial void OnServiceRetryCountDefaultChanging(byte value);
    partial void OnServiceRetryCountDefaultChanged();
    partial void OnHasMultipleBlogsChanging(bool value);
    partial void OnHasMultipleBlogsChanged();
    partial void OnRouteUrlPrefixChanging(string value);
    partial void OnRouteUrlPrefixChanged();
    partial void OnCommentingDisabledChanging(bool value);
    partial void OnCommentingDisabledChanged();
    partial void OnPluginsPathChanging(string value);
    partial void OnPluginsPathChanged();
    #endregion
		
		public oxite_Site()
		{
			this._oxite_Blogs = new EntitySet<oxite_Blog>(new Action<oxite_Blog>(this.attach_oxite_Blogs), new Action<oxite_Blog>(this.detach_oxite_Blogs));
			OnCreated();
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[Column(Storage="_SiteHost", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SiteHost
		{
			get
			{
				return this._SiteHost;
			}
			set
			{
				if ((this._SiteHost != value))
				{
					this.OnSiteHostChanging(value);
					this.SendPropertyChanging();
					this._SiteHost = value;
					this.SendPropertyChanged("SiteHost");
					this.OnSiteHostChanged();
				}
			}
		}
		
		[Column(Storage="_SiteName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[Column(Storage="_SiteDisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SiteDisplayName
		{
			get
			{
				return this._SiteDisplayName;
			}
			set
			{
				if ((this._SiteDisplayName != value))
				{
					this.OnSiteDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._SiteDisplayName = value;
					this.SendPropertyChanged("SiteDisplayName");
					this.OnSiteDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_SiteDescription", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SiteDescription
		{
			get
			{
				return this._SiteDescription;
			}
			set
			{
				if ((this._SiteDescription != value))
				{
					this.OnSiteDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SiteDescription = value;
					this.SendPropertyChanged("SiteDescription");
					this.OnSiteDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageDefault", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string LanguageDefault
		{
			get
			{
				return this._LanguageDefault;
			}
			set
			{
				if ((this._LanguageDefault != value))
				{
					this.OnLanguageDefaultChanging(value);
					this.SendPropertyChanging();
					this._LanguageDefault = value;
					this.SendPropertyChanged("LanguageDefault");
					this.OnLanguageDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_TimeZoneOffset", DbType="Float NOT NULL")]
		public double TimeZoneOffset
		{
			get
			{
				return this._TimeZoneOffset;
			}
			set
			{
				if ((this._TimeZoneOffset != value))
				{
					this.OnTimeZoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneOffset = value;
					this.SendPropertyChanged("TimeZoneOffset");
					this.OnTimeZoneOffsetChanged();
				}
			}
		}
		
		[Column(Storage="_PageTitleSeparator", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PageTitleSeparator
		{
			get
			{
				return this._PageTitleSeparator;
			}
			set
			{
				if ((this._PageTitleSeparator != value))
				{
					this.OnPageTitleSeparatorChanging(value);
					this.SendPropertyChanging();
					this._PageTitleSeparator = value;
					this.SendPropertyChanged("PageTitleSeparator");
					this.OnPageTitleSeparatorChanged();
				}
			}
		}
		
		[Column(Storage="_FavIconUrl", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FavIconUrl
		{
			get
			{
				return this._FavIconUrl;
			}
			set
			{
				if ((this._FavIconUrl != value))
				{
					this.OnFavIconUrlChanging(value);
					this.SendPropertyChanging();
					this._FavIconUrl = value;
					this.SendPropertyChanged("FavIconUrl");
					this.OnFavIconUrlChanged();
				}
			}
		}
		
		[Column(Storage="_CommentStateDefault", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string CommentStateDefault
		{
			get
			{
				return this._CommentStateDefault;
			}
			set
			{
				if ((this._CommentStateDefault != value))
				{
					this.OnCommentStateDefaultChanging(value);
					this.SendPropertyChanging();
					this._CommentStateDefault = value;
					this.SendPropertyChanged("CommentStateDefault");
					this.OnCommentStateDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_IncludeOpenSearch", DbType="Bit NOT NULL")]
		public bool IncludeOpenSearch
		{
			get
			{
				return this._IncludeOpenSearch;
			}
			set
			{
				if ((this._IncludeOpenSearch != value))
				{
					this.OnIncludeOpenSearchChanging(value);
					this.SendPropertyChanging();
					this._IncludeOpenSearch = value;
					this.SendPropertyChanged("IncludeOpenSearch");
					this.OnIncludeOpenSearchChanged();
				}
			}
		}
		
		[Column(Storage="_AuthorAutoSubscribe", DbType="Bit NOT NULL")]
		public bool AuthorAutoSubscribe
		{
			get
			{
				return this._AuthorAutoSubscribe;
			}
			set
			{
				if ((this._AuthorAutoSubscribe != value))
				{
					this.OnAuthorAutoSubscribeChanging(value);
					this.SendPropertyChanging();
					this._AuthorAutoSubscribe = value;
					this.SendPropertyChanged("AuthorAutoSubscribe");
					this.OnAuthorAutoSubscribeChanged();
				}
			}
		}
		
		[Column(Storage="_PostEditTimeout", DbType="SmallInt NOT NULL")]
		public short PostEditTimeout
		{
			get
			{
				return this._PostEditTimeout;
			}
			set
			{
				if ((this._PostEditTimeout != value))
				{
					this.OnPostEditTimeoutChanging(value);
					this.SendPropertyChanging();
					this._PostEditTimeout = value;
					this.SendPropertyChanged("PostEditTimeout");
					this.OnPostEditTimeoutChanged();
				}
			}
		}
		
		[Column(Storage="_GravatarDefault", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GravatarDefault
		{
			get
			{
				return this._GravatarDefault;
			}
			set
			{
				if ((this._GravatarDefault != value))
				{
					this.OnGravatarDefaultChanging(value);
					this.SendPropertyChanging();
					this._GravatarDefault = value;
					this.SendPropertyChanged("GravatarDefault");
					this.OnGravatarDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_SkinsPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinsPath
		{
			get
			{
				return this._SkinsPath;
			}
			set
			{
				if ((this._SkinsPath != value))
				{
					this.OnSkinsPathChanging(value);
					this.SendPropertyChanging();
					this._SkinsPath = value;
					this.SendPropertyChanged("SkinsPath");
					this.OnSkinsPathChanged();
				}
			}
		}
		
		[Column(Storage="_SkinsScriptsPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinsScriptsPath
		{
			get
			{
				return this._SkinsScriptsPath;
			}
			set
			{
				if ((this._SkinsScriptsPath != value))
				{
					this.OnSkinsScriptsPathChanging(value);
					this.SendPropertyChanging();
					this._SkinsScriptsPath = value;
					this.SendPropertyChanged("SkinsScriptsPath");
					this.OnSkinsScriptsPathChanged();
				}
			}
		}
		
		[Column(Storage="_SkinsStylesPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinsStylesPath
		{
			get
			{
				return this._SkinsStylesPath;
			}
			set
			{
				if ((this._SkinsStylesPath != value))
				{
					this.OnSkinsStylesPathChanging(value);
					this.SendPropertyChanging();
					this._SkinsStylesPath = value;
					this.SendPropertyChanged("SkinsStylesPath");
					this.OnSkinsStylesPathChanged();
				}
			}
		}
		
		[Column(Storage="_Skin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Skin
		{
			get
			{
				return this._Skin;
			}
			set
			{
				if ((this._Skin != value))
				{
					this.OnSkinChanging(value);
					this.SendPropertyChanging();
					this._Skin = value;
					this.SendPropertyChanged("Skin");
					this.OnSkinChanged();
				}
			}
		}
		
		[Column(Storage="_AdminSkin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminSkin
		{
			get
			{
				return this._AdminSkin;
			}
			set
			{
				if ((this._AdminSkin != value))
				{
					this.OnAdminSkinChanging(value);
					this.SendPropertyChanging();
					this._AdminSkin = value;
					this.SendPropertyChanged("AdminSkin");
					this.OnAdminSkinChanged();
				}
			}
		}
		
		[Column(Storage="_ServiceRetryCountDefault", DbType="TinyInt NOT NULL")]
		public byte ServiceRetryCountDefault
		{
			get
			{
				return this._ServiceRetryCountDefault;
			}
			set
			{
				if ((this._ServiceRetryCountDefault != value))
				{
					this.OnServiceRetryCountDefaultChanging(value);
					this.SendPropertyChanging();
					this._ServiceRetryCountDefault = value;
					this.SendPropertyChanged("ServiceRetryCountDefault");
					this.OnServiceRetryCountDefaultChanged();
				}
			}
		}
		
		[Column(Storage="_HasMultipleBlogs", DbType="Bit NOT NULL")]
		public bool HasMultipleBlogs
		{
			get
			{
				return this._HasMultipleBlogs;
			}
			set
			{
				if ((this._HasMultipleBlogs != value))
				{
					this.OnHasMultipleBlogsChanging(value);
					this.SendPropertyChanging();
					this._HasMultipleBlogs = value;
					this.SendPropertyChanged("HasMultipleBlogs");
					this.OnHasMultipleBlogsChanged();
				}
			}
		}
		
		[Column(Storage="_RouteUrlPrefix", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RouteUrlPrefix
		{
			get
			{
				return this._RouteUrlPrefix;
			}
			set
			{
				if ((this._RouteUrlPrefix != value))
				{
					this.OnRouteUrlPrefixChanging(value);
					this.SendPropertyChanging();
					this._RouteUrlPrefix = value;
					this.SendPropertyChanged("RouteUrlPrefix");
					this.OnRouteUrlPrefixChanged();
				}
			}
		}
		
		[Column(Storage="_CommentingDisabled", DbType="Bit NOT NULL")]
		public bool CommentingDisabled
		{
			get
			{
				return this._CommentingDisabled;
			}
			set
			{
				if ((this._CommentingDisabled != value))
				{
					this.OnCommentingDisabledChanging(value);
					this.SendPropertyChanging();
					this._CommentingDisabled = value;
					this.SendPropertyChanged("CommentingDisabled");
					this.OnCommentingDisabledChanged();
				}
			}
		}
		
		[Column(Storage="_PluginsPath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PluginsPath
		{
			get
			{
				return this._PluginsPath;
			}
			set
			{
				if ((this._PluginsPath != value))
				{
					this.OnPluginsPathChanging(value);
					this.SendPropertyChanging();
					this._PluginsPath = value;
					this.SendPropertyChanged("PluginsPath");
					this.OnPluginsPathChanged();
				}
			}
		}
		
		[Association(Name="oxite_Site_oxite_Blog", Storage="_oxite_Blogs", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<oxite_Blog> oxite_Blogs
		{
			get
			{
				return this._oxite_Blogs;
			}
			set
			{
				this._oxite_Blogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Blogs(oxite_Blog entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = this;
		}
		
		private void detach_oxite_Blogs(oxite_Blog entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Site = null;
		}
	}
	
	[Table(Name="dbo.oxite_User")]
	public partial class oxite_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private string _Username;
		
		private string _DisplayName;
		
		private string _Email;
		
		private string _HashedEmail;
		
		private System.Guid _DefaultLanguageID;
		
		private byte _Status;
		
		private EntitySet<oxite_Post> _oxite_Posts;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntityRef<oxite_Language> _oxite_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHashedEmailChanging(string value);
    partial void OnHashedEmailChanged();
    partial void OnDefaultLanguageIDChanging(System.Guid value);
    partial void OnDefaultLanguageIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public oxite_User()
		{
			this._oxite_Posts = new EntitySet<oxite_Post>(new Action<oxite_Post>(this.attach_oxite_Posts), new Action<oxite_Post>(this.detach_oxite_Posts));
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_Language = default(EntityRef<oxite_Language>);
			OnCreated();
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_HashedEmail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HashedEmail
		{
			get
			{
				return this._HashedEmail;
			}
			set
			{
				if ((this._HashedEmail != value))
				{
					this.OnHashedEmailChanging(value);
					this.SendPropertyChanging();
					this._HashedEmail = value;
					this.SendPropertyChanged("HashedEmail");
					this.OnHashedEmailChanged();
				}
			}
		}
		
		[Column(Storage="_DefaultLanguageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DefaultLanguageID
		{
			get
			{
				return this._DefaultLanguageID;
			}
			set
			{
				if ((this._DefaultLanguageID != value))
				{
					if (this._oxite_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefaultLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageID = value;
					this.SendPropertyChanged("DefaultLanguageID");
					this.OnDefaultLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_Post", Storage="_oxite_Posts", ThisKey="UserID", OtherKey="CreatorUserID")]
		public EntitySet<oxite_Post> oxite_Posts
		{
			get
			{
				return this._oxite_Posts;
			}
			set
			{
				this._oxite_Posts.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_Comment", Storage="_oxite_Comments", ThisKey="UserID", OtherKey="CreatorUserID")]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_Language_oxite_User", Storage="_oxite_Language", ThisKey="DefaultLanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public oxite_Language oxite_Language
		{
			get
			{
				return this._oxite_Language.Entity;
			}
			set
			{
				oxite_Language previousValue = this._oxite_Language.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Language.Entity = null;
						previousValue.oxite_Users.Remove(this);
					}
					this._oxite_Language.Entity = value;
					if ((value != null))
					{
						value.oxite_Users.Add(this);
						this._DefaultLanguageID = value.LanguageID;
					}
					else
					{
						this._DefaultLanguageID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Posts(oxite_Post entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_Posts(oxite_Post entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
	}
	
	[Table(Name="dbo.oxite_Language")]
	public partial class oxite_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LanguageID;
		
		private string _LanguageName;
		
		private string _LanguageDisplayName;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntitySet<oxite_User> _oxite_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(System.Guid value);
    partial void OnLanguageIDChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    partial void OnLanguageDisplayNameChanging(string value);
    partial void OnLanguageDisplayNameChanged();
    #endregion
		
		public oxite_Language()
		{
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_Users = new EntitySet<oxite_User>(new Action<oxite_User>(this.attach_oxite_Users), new Action<oxite_User>(this.detach_oxite_Users));
			OnCreated();
		}
		
		[Column(Storage="_LanguageID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageName", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string LanguageName
		{
			get
			{
				return this._LanguageName;
			}
			set
			{
				if ((this._LanguageName != value))
				{
					this.OnLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageName = value;
					this.SendPropertyChanged("LanguageName");
					this.OnLanguageNameChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageDisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LanguageDisplayName
		{
			get
			{
				return this._LanguageDisplayName;
			}
			set
			{
				if ((this._LanguageDisplayName != value))
				{
					this.OnLanguageDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageDisplayName = value;
					this.SendPropertyChanged("LanguageDisplayName");
					this.OnLanguageDisplayNameChanged();
				}
			}
		}
		
		[Association(Name="oxite_Language_oxite_Comment", Storage="_oxite_Comments", ThisKey="LanguageID", OtherKey="LanguageID")]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_Language_oxite_User", Storage="_oxite_Users", ThisKey="LanguageID", OtherKey="DefaultLanguageID")]
		public EntitySet<oxite_User> oxite_Users
		{
			get
			{
				return this._oxite_Users;
			}
			set
			{
				this._oxite_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = null;
		}
		
		private void attach_oxite_Users(oxite_User entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = this;
		}
		
		private void detach_oxite_Users(oxite_User entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = null;
		}
	}
}
#pragma warning restore 1591
